name: Build dev container feature image

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        baseImage:
          [
            "ubuntu:focal",
            "ubuntu:jammy",
            "ubuntu:bionic",
            "debian:11",
            "debian:10",
            "mcr.microsoft.com/devcontainers/base:ubuntu",
            "mcr.microsoft.com/devcontainers/base:debian",
          ]
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for 'azd' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f azd -i ${{ matrix.baseImage }} .
        working-directory: ./ext/devcontainer

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing 'azd' scenarios"
        run: devcontainer features test -f azd --skip-autogenerated .
        working-directory: ./ext/devcontainer

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
        working-directory: ./ext/devcontainer

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [test, test-global, test-scenarios]
    environment:
      name: deploy-devcontainer-feature
    steps:
      - uses: actions/checkout@v3

      - name: "Publish Features"
        uses: devcontainers/action@v1
        with:
          publish-features: "true"
          base-path-to-features: "./ext/devcontainer"
          generate-docs: "true"
