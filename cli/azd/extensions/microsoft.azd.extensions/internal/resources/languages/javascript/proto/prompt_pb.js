// source: prompt.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var models_pb = require('./models_pb.js');
goog.object.extend(proto, models_pb);
goog.exportSymbol('proto.azdext.ConfirmOptions', null, global);
goog.exportSymbol('proto.azdext.ConfirmRequest', null, global);
goog.exportSymbol('proto.azdext.ConfirmResponse', null, global);
goog.exportSymbol('proto.azdext.MultiSelectChoice', null, global);
goog.exportSymbol('proto.azdext.MultiSelectOptions', null, global);
goog.exportSymbol('proto.azdext.MultiSelectRequest', null, global);
goog.exportSymbol('proto.azdext.MultiSelectResponse', null, global);
goog.exportSymbol('proto.azdext.PromptLocationRequest', null, global);
goog.exportSymbol('proto.azdext.PromptLocationResponse', null, global);
goog.exportSymbol('proto.azdext.PromptOptions', null, global);
goog.exportSymbol('proto.azdext.PromptRequest', null, global);
goog.exportSymbol('proto.azdext.PromptResourceGroupRequest', null, global);
goog.exportSymbol('proto.azdext.PromptResourceGroupResourceRequest', null, global);
goog.exportSymbol('proto.azdext.PromptResourceGroupResourceResponse', null, global);
goog.exportSymbol('proto.azdext.PromptResourceGroupResponse', null, global);
goog.exportSymbol('proto.azdext.PromptResourceOptions', null, global);
goog.exportSymbol('proto.azdext.PromptResourceSelectOptions', null, global);
goog.exportSymbol('proto.azdext.PromptResponse', null, global);
goog.exportSymbol('proto.azdext.PromptSubscriptionRequest', null, global);
goog.exportSymbol('proto.azdext.PromptSubscriptionResourceRequest', null, global);
goog.exportSymbol('proto.azdext.PromptSubscriptionResourceResponse', null, global);
goog.exportSymbol('proto.azdext.PromptSubscriptionResponse', null, global);
goog.exportSymbol('proto.azdext.SelectChoice', null, global);
goog.exportSymbol('proto.azdext.SelectOptions', null, global);
goog.exportSymbol('proto.azdext.SelectRequest', null, global);
goog.exportSymbol('proto.azdext.SelectResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptSubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptSubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptSubscriptionRequest.displayName = 'proto.azdext.PromptSubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptSubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptSubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptSubscriptionResponse.displayName = 'proto.azdext.PromptSubscriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptLocationRequest.displayName = 'proto.azdext.PromptLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptLocationResponse.displayName = 'proto.azdext.PromptLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResourceGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptResourceGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResourceGroupRequest.displayName = 'proto.azdext.PromptResourceGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResourceGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptResourceGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResourceGroupResponse.displayName = 'proto.azdext.PromptResourceGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.ConfirmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.ConfirmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.ConfirmRequest.displayName = 'proto.azdext.ConfirmRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.ConfirmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.ConfirmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.ConfirmResponse.displayName = 'proto.azdext.ConfirmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptRequest.displayName = 'proto.azdext.PromptRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResponse.displayName = 'proto.azdext.PromptResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.SelectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.SelectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.SelectRequest.displayName = 'proto.azdext.SelectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.SelectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.SelectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.SelectResponse.displayName = 'proto.azdext.SelectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.MultiSelectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.MultiSelectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.MultiSelectRequest.displayName = 'proto.azdext.MultiSelectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.MultiSelectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.azdext.MultiSelectResponse.repeatedFields_, null);
};
goog.inherits(proto.azdext.MultiSelectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.MultiSelectResponse.displayName = 'proto.azdext.MultiSelectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptSubscriptionResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptSubscriptionResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptSubscriptionResourceRequest.displayName = 'proto.azdext.PromptSubscriptionResourceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptSubscriptionResourceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptSubscriptionResourceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptSubscriptionResourceResponse.displayName = 'proto.azdext.PromptSubscriptionResourceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResourceGroupResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptResourceGroupResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResourceGroupResourceRequest.displayName = 'proto.azdext.PromptResourceGroupResourceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResourceGroupResourceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptResourceGroupResourceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResourceGroupResourceResponse.displayName = 'proto.azdext.PromptResourceGroupResourceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.ConfirmOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.ConfirmOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.ConfirmOptions.displayName = 'proto.azdext.ConfirmOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptOptions.displayName = 'proto.azdext.PromptOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.SelectChoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.SelectChoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.SelectChoice.displayName = 'proto.azdext.SelectChoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.MultiSelectChoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.MultiSelectChoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.MultiSelectChoice.displayName = 'proto.azdext.MultiSelectChoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.SelectOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.azdext.SelectOptions.repeatedFields_, null);
};
goog.inherits(proto.azdext.SelectOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.SelectOptions.displayName = 'proto.azdext.SelectOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.MultiSelectOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.azdext.MultiSelectOptions.repeatedFields_, null);
};
goog.inherits(proto.azdext.MultiSelectOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.MultiSelectOptions.displayName = 'proto.azdext.MultiSelectOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResourceOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.azdext.PromptResourceOptions.repeatedFields_, null);
};
goog.inherits(proto.azdext.PromptResourceOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResourceOptions.displayName = 'proto.azdext.PromptResourceOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.azdext.PromptResourceSelectOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.azdext.PromptResourceSelectOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.azdext.PromptResourceSelectOptions.displayName = 'proto.azdext.PromptResourceSelectOptions';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptSubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptSubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptSubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptSubscriptionRequest}
 */
proto.azdext.PromptSubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptSubscriptionRequest;
  return proto.azdext.PromptSubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptSubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptSubscriptionRequest}
 */
proto.azdext.PromptSubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptSubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptSubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptSubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptSubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptSubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
subscription: (f = msg.getSubscription()) && models_pb.Subscription.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptSubscriptionResponse}
 */
proto.azdext.PromptSubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptSubscriptionResponse;
  return proto.azdext.PromptSubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptSubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptSubscriptionResponse}
 */
proto.azdext.PromptSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.Subscription;
      reader.readMessage(value,models_pb.Subscription.deserializeBinaryFromReader);
      msg.setSubscription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptSubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptSubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptSubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscription();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.Subscription.serializeBinaryToWriter
    );
  }
};


/**
 * optional Subscription subscription = 1;
 * @return {?proto.azdext.Subscription}
 */
proto.azdext.PromptSubscriptionResponse.prototype.getSubscription = function() {
  return /** @type{?proto.azdext.Subscription} */ (
    jspb.Message.getWrapperField(this, models_pb.Subscription, 1));
};


/**
 * @param {?proto.azdext.Subscription|undefined} value
 * @return {!proto.azdext.PromptSubscriptionResponse} returns this
*/
proto.azdext.PromptSubscriptionResponse.prototype.setSubscription = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptSubscriptionResponse} returns this
 */
proto.azdext.PromptSubscriptionResponse.prototype.clearSubscription = function() {
  return this.setSubscription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptSubscriptionResponse.prototype.hasSubscription = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
azureContext: (f = msg.getAzureContext()) && models_pb.AzureContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptLocationRequest}
 */
proto.azdext.PromptLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptLocationRequest;
  return proto.azdext.PromptLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptLocationRequest}
 */
proto.azdext.PromptLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.AzureContext;
      reader.readMessage(value,models_pb.AzureContext.deserializeBinaryFromReader);
      msg.setAzureContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAzureContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.AzureContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional AzureContext azure_context = 1;
 * @return {?proto.azdext.AzureContext}
 */
proto.azdext.PromptLocationRequest.prototype.getAzureContext = function() {
  return /** @type{?proto.azdext.AzureContext} */ (
    jspb.Message.getWrapperField(this, models_pb.AzureContext, 1));
};


/**
 * @param {?proto.azdext.AzureContext|undefined} value
 * @return {!proto.azdext.PromptLocationRequest} returns this
*/
proto.azdext.PromptLocationRequest.prototype.setAzureContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptLocationRequest} returns this
 */
proto.azdext.PromptLocationRequest.prototype.clearAzureContext = function() {
  return this.setAzureContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptLocationRequest.prototype.hasAzureContext = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
location: (f = msg.getLocation()) && models_pb.Location.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptLocationResponse}
 */
proto.azdext.PromptLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptLocationResponse;
  return proto.azdext.PromptLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptLocationResponse}
 */
proto.azdext.PromptLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.Location;
      reader.readMessage(value,models_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional Location location = 1;
 * @return {?proto.azdext.Location}
 */
proto.azdext.PromptLocationResponse.prototype.getLocation = function() {
  return /** @type{?proto.azdext.Location} */ (
    jspb.Message.getWrapperField(this, models_pb.Location, 1));
};


/**
 * @param {?proto.azdext.Location|undefined} value
 * @return {!proto.azdext.PromptLocationResponse} returns this
*/
proto.azdext.PromptLocationResponse.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptLocationResponse} returns this
 */
proto.azdext.PromptLocationResponse.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptLocationResponse.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResourceGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResourceGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResourceGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
azureContext: (f = msg.getAzureContext()) && models_pb.AzureContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResourceGroupRequest}
 */
proto.azdext.PromptResourceGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResourceGroupRequest;
  return proto.azdext.PromptResourceGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResourceGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResourceGroupRequest}
 */
proto.azdext.PromptResourceGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.AzureContext;
      reader.readMessage(value,models_pb.AzureContext.deserializeBinaryFromReader);
      msg.setAzureContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResourceGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResourceGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResourceGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAzureContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.AzureContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional AzureContext azure_context = 1;
 * @return {?proto.azdext.AzureContext}
 */
proto.azdext.PromptResourceGroupRequest.prototype.getAzureContext = function() {
  return /** @type{?proto.azdext.AzureContext} */ (
    jspb.Message.getWrapperField(this, models_pb.AzureContext, 1));
};


/**
 * @param {?proto.azdext.AzureContext|undefined} value
 * @return {!proto.azdext.PromptResourceGroupRequest} returns this
*/
proto.azdext.PromptResourceGroupRequest.prototype.setAzureContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptResourceGroupRequest} returns this
 */
proto.azdext.PromptResourceGroupRequest.prototype.clearAzureContext = function() {
  return this.setAzureContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceGroupRequest.prototype.hasAzureContext = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResourceGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResourceGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResourceGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
resourceGroup: (f = msg.getResourceGroup()) && models_pb.ResourceGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResourceGroupResponse}
 */
proto.azdext.PromptResourceGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResourceGroupResponse;
  return proto.azdext.PromptResourceGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResourceGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResourceGroupResponse}
 */
proto.azdext.PromptResourceGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.ResourceGroup;
      reader.readMessage(value,models_pb.ResourceGroup.deserializeBinaryFromReader);
      msg.setResourceGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResourceGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResourceGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResourceGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.ResourceGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceGroup resource_group = 1;
 * @return {?proto.azdext.ResourceGroup}
 */
proto.azdext.PromptResourceGroupResponse.prototype.getResourceGroup = function() {
  return /** @type{?proto.azdext.ResourceGroup} */ (
    jspb.Message.getWrapperField(this, models_pb.ResourceGroup, 1));
};


/**
 * @param {?proto.azdext.ResourceGroup|undefined} value
 * @return {!proto.azdext.PromptResourceGroupResponse} returns this
*/
proto.azdext.PromptResourceGroupResponse.prototype.setResourceGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptResourceGroupResponse} returns this
 */
proto.azdext.PromptResourceGroupResponse.prototype.clearResourceGroup = function() {
  return this.setResourceGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceGroupResponse.prototype.hasResourceGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.ConfirmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.ConfirmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.ConfirmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.ConfirmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
options: (f = msg.getOptions()) && proto.azdext.ConfirmOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.ConfirmRequest}
 */
proto.azdext.ConfirmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.ConfirmRequest;
  return proto.azdext.ConfirmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.ConfirmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.ConfirmRequest}
 */
proto.azdext.ConfirmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.azdext.ConfirmOptions;
      reader.readMessage(value,proto.azdext.ConfirmOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.ConfirmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.ConfirmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.ConfirmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.ConfirmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.azdext.ConfirmOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConfirmOptions options = 1;
 * @return {?proto.azdext.ConfirmOptions}
 */
proto.azdext.ConfirmRequest.prototype.getOptions = function() {
  return /** @type{?proto.azdext.ConfirmOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.ConfirmOptions, 1));
};


/**
 * @param {?proto.azdext.ConfirmOptions|undefined} value
 * @return {!proto.azdext.ConfirmRequest} returns this
*/
proto.azdext.ConfirmRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.ConfirmRequest} returns this
 */
proto.azdext.ConfirmRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.ConfirmRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.ConfirmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.ConfirmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.ConfirmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.ConfirmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
value: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.ConfirmResponse}
 */
proto.azdext.ConfirmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.ConfirmResponse;
  return proto.azdext.ConfirmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.ConfirmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.ConfirmResponse}
 */
proto.azdext.ConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.ConfirmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.ConfirmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.ConfirmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.ConfirmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool value = 1;
 * @return {boolean}
 */
proto.azdext.ConfirmResponse.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.ConfirmResponse} returns this
 */
proto.azdext.ConfirmResponse.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.ConfirmResponse} returns this
 */
proto.azdext.ConfirmResponse.prototype.clearValue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.ConfirmResponse.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
options: (f = msg.getOptions()) && proto.azdext.PromptOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptRequest}
 */
proto.azdext.PromptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptRequest;
  return proto.azdext.PromptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptRequest}
 */
proto.azdext.PromptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.azdext.PromptOptions;
      reader.readMessage(value,proto.azdext.PromptOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.azdext.PromptOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional PromptOptions options = 1;
 * @return {?proto.azdext.PromptOptions}
 */
proto.azdext.PromptRequest.prototype.getOptions = function() {
  return /** @type{?proto.azdext.PromptOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.PromptOptions, 1));
};


/**
 * @param {?proto.azdext.PromptOptions|undefined} value
 * @return {!proto.azdext.PromptRequest} returns this
*/
proto.azdext.PromptRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptRequest} returns this
 */
proto.azdext.PromptRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResponse}
 */
proto.azdext.PromptResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResponse;
  return proto.azdext.PromptResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResponse}
 */
proto.azdext.PromptResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.azdext.PromptResponse.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResponse} returns this
 */
proto.azdext.PromptResponse.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.SelectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.SelectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.SelectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
options: (f = msg.getOptions()) && proto.azdext.SelectOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.SelectRequest}
 */
proto.azdext.SelectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.SelectRequest;
  return proto.azdext.SelectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.SelectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.SelectRequest}
 */
proto.azdext.SelectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.azdext.SelectOptions;
      reader.readMessage(value,proto.azdext.SelectOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.SelectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.SelectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.SelectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.azdext.SelectOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional SelectOptions options = 1;
 * @return {?proto.azdext.SelectOptions}
 */
proto.azdext.SelectRequest.prototype.getOptions = function() {
  return /** @type{?proto.azdext.SelectOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.SelectOptions, 1));
};


/**
 * @param {?proto.azdext.SelectOptions|undefined} value
 * @return {!proto.azdext.SelectRequest} returns this
*/
proto.azdext.SelectRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.SelectRequest} returns this
 */
proto.azdext.SelectRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.SelectRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.SelectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.SelectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.SelectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
value: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.SelectResponse}
 */
proto.azdext.SelectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.SelectResponse;
  return proto.azdext.SelectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.SelectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.SelectResponse}
 */
proto.azdext.SelectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.SelectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.SelectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.SelectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.azdext.SelectResponse.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.azdext.SelectResponse} returns this
 */
proto.azdext.SelectResponse.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.SelectResponse} returns this
 */
proto.azdext.SelectResponse.prototype.clearValue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.SelectResponse.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.MultiSelectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.MultiSelectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.MultiSelectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
options: (f = msg.getOptions()) && proto.azdext.MultiSelectOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.MultiSelectRequest}
 */
proto.azdext.MultiSelectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.MultiSelectRequest;
  return proto.azdext.MultiSelectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.MultiSelectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.MultiSelectRequest}
 */
proto.azdext.MultiSelectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.azdext.MultiSelectOptions;
      reader.readMessage(value,proto.azdext.MultiSelectOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.MultiSelectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.MultiSelectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.MultiSelectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.azdext.MultiSelectOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional MultiSelectOptions options = 1;
 * @return {?proto.azdext.MultiSelectOptions}
 */
proto.azdext.MultiSelectRequest.prototype.getOptions = function() {
  return /** @type{?proto.azdext.MultiSelectOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.MultiSelectOptions, 1));
};


/**
 * @param {?proto.azdext.MultiSelectOptions|undefined} value
 * @return {!proto.azdext.MultiSelectRequest} returns this
*/
proto.azdext.MultiSelectRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.MultiSelectRequest} returns this
 */
proto.azdext.MultiSelectRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.MultiSelectRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.azdext.MultiSelectResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.MultiSelectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.MultiSelectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.MultiSelectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.azdext.MultiSelectChoice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.MultiSelectResponse}
 */
proto.azdext.MultiSelectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.MultiSelectResponse;
  return proto.azdext.MultiSelectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.MultiSelectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.MultiSelectResponse}
 */
proto.azdext.MultiSelectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.azdext.MultiSelectChoice;
      reader.readMessage(value,proto.azdext.MultiSelectChoice.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.MultiSelectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.MultiSelectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.MultiSelectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.azdext.MultiSelectChoice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MultiSelectChoice values = 1;
 * @return {!Array<!proto.azdext.MultiSelectChoice>}
 */
proto.azdext.MultiSelectResponse.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.azdext.MultiSelectChoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.azdext.MultiSelectChoice, 1));
};


/**
 * @param {!Array<!proto.azdext.MultiSelectChoice>} value
 * @return {!proto.azdext.MultiSelectResponse} returns this
*/
proto.azdext.MultiSelectResponse.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.azdext.MultiSelectChoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.azdext.MultiSelectChoice}
 */
proto.azdext.MultiSelectResponse.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.azdext.MultiSelectChoice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.azdext.MultiSelectResponse} returns this
 */
proto.azdext.MultiSelectResponse.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptSubscriptionResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptSubscriptionResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
azureContext: (f = msg.getAzureContext()) && models_pb.AzureContext.toObject(includeInstance, f),
options: (f = msg.getOptions()) && proto.azdext.PromptResourceOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptSubscriptionResourceRequest}
 */
proto.azdext.PromptSubscriptionResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptSubscriptionResourceRequest;
  return proto.azdext.PromptSubscriptionResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptSubscriptionResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptSubscriptionResourceRequest}
 */
proto.azdext.PromptSubscriptionResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.AzureContext;
      reader.readMessage(value,models_pb.AzureContext.deserializeBinaryFromReader);
      msg.setAzureContext(value);
      break;
    case 2:
      var value = new proto.azdext.PromptResourceOptions;
      reader.readMessage(value,proto.azdext.PromptResourceOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptSubscriptionResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptSubscriptionResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAzureContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.AzureContext.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.azdext.PromptResourceOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional AzureContext azure_context = 1;
 * @return {?proto.azdext.AzureContext}
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.getAzureContext = function() {
  return /** @type{?proto.azdext.AzureContext} */ (
    jspb.Message.getWrapperField(this, models_pb.AzureContext, 1));
};


/**
 * @param {?proto.azdext.AzureContext|undefined} value
 * @return {!proto.azdext.PromptSubscriptionResourceRequest} returns this
*/
proto.azdext.PromptSubscriptionResourceRequest.prototype.setAzureContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptSubscriptionResourceRequest} returns this
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.clearAzureContext = function() {
  return this.setAzureContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.hasAzureContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PromptResourceOptions options = 2;
 * @return {?proto.azdext.PromptResourceOptions}
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.getOptions = function() {
  return /** @type{?proto.azdext.PromptResourceOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.PromptResourceOptions, 2));
};


/**
 * @param {?proto.azdext.PromptResourceOptions|undefined} value
 * @return {!proto.azdext.PromptSubscriptionResourceRequest} returns this
*/
proto.azdext.PromptSubscriptionResourceRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptSubscriptionResourceRequest} returns this
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptSubscriptionResourceRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptSubscriptionResourceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptSubscriptionResourceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptSubscriptionResourceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionResourceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
resource: (f = msg.getResource()) && models_pb.ResourceExtended.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptSubscriptionResourceResponse}
 */
proto.azdext.PromptSubscriptionResourceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptSubscriptionResourceResponse;
  return proto.azdext.PromptSubscriptionResourceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptSubscriptionResourceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptSubscriptionResourceResponse}
 */
proto.azdext.PromptSubscriptionResourceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.ResourceExtended;
      reader.readMessage(value,models_pb.ResourceExtended.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptSubscriptionResourceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptSubscriptionResourceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptSubscriptionResourceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptSubscriptionResourceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.ResourceExtended.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceExtended resource = 1;
 * @return {?proto.azdext.ResourceExtended}
 */
proto.azdext.PromptSubscriptionResourceResponse.prototype.getResource = function() {
  return /** @type{?proto.azdext.ResourceExtended} */ (
    jspb.Message.getWrapperField(this, models_pb.ResourceExtended, 1));
};


/**
 * @param {?proto.azdext.ResourceExtended|undefined} value
 * @return {!proto.azdext.PromptSubscriptionResourceResponse} returns this
*/
proto.azdext.PromptSubscriptionResourceResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptSubscriptionResourceResponse} returns this
 */
proto.azdext.PromptSubscriptionResourceResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptSubscriptionResourceResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResourceGroupResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResourceGroupResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
azureContext: (f = msg.getAzureContext()) && models_pb.AzureContext.toObject(includeInstance, f),
options: (f = msg.getOptions()) && proto.azdext.PromptResourceOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResourceGroupResourceRequest}
 */
proto.azdext.PromptResourceGroupResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResourceGroupResourceRequest;
  return proto.azdext.PromptResourceGroupResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResourceGroupResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResourceGroupResourceRequest}
 */
proto.azdext.PromptResourceGroupResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.AzureContext;
      reader.readMessage(value,models_pb.AzureContext.deserializeBinaryFromReader);
      msg.setAzureContext(value);
      break;
    case 2:
      var value = new proto.azdext.PromptResourceOptions;
      reader.readMessage(value,proto.azdext.PromptResourceOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResourceGroupResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResourceGroupResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAzureContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.AzureContext.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.azdext.PromptResourceOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional AzureContext azure_context = 1;
 * @return {?proto.azdext.AzureContext}
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.getAzureContext = function() {
  return /** @type{?proto.azdext.AzureContext} */ (
    jspb.Message.getWrapperField(this, models_pb.AzureContext, 1));
};


/**
 * @param {?proto.azdext.AzureContext|undefined} value
 * @return {!proto.azdext.PromptResourceGroupResourceRequest} returns this
*/
proto.azdext.PromptResourceGroupResourceRequest.prototype.setAzureContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptResourceGroupResourceRequest} returns this
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.clearAzureContext = function() {
  return this.setAzureContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.hasAzureContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PromptResourceOptions options = 2;
 * @return {?proto.azdext.PromptResourceOptions}
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.getOptions = function() {
  return /** @type{?proto.azdext.PromptResourceOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.PromptResourceOptions, 2));
};


/**
 * @param {?proto.azdext.PromptResourceOptions|undefined} value
 * @return {!proto.azdext.PromptResourceGroupResourceRequest} returns this
*/
proto.azdext.PromptResourceGroupResourceRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptResourceGroupResourceRequest} returns this
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceGroupResourceRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResourceGroupResourceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResourceGroupResourceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResourceGroupResourceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupResourceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
resource: (f = msg.getResource()) && models_pb.ResourceExtended.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResourceGroupResourceResponse}
 */
proto.azdext.PromptResourceGroupResourceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResourceGroupResourceResponse;
  return proto.azdext.PromptResourceGroupResourceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResourceGroupResourceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResourceGroupResourceResponse}
 */
proto.azdext.PromptResourceGroupResourceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_pb.ResourceExtended;
      reader.readMessage(value,models_pb.ResourceExtended.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResourceGroupResourceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResourceGroupResourceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResourceGroupResourceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceGroupResourceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_pb.ResourceExtended.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceExtended resource = 1;
 * @return {?proto.azdext.ResourceExtended}
 */
proto.azdext.PromptResourceGroupResourceResponse.prototype.getResource = function() {
  return /** @type{?proto.azdext.ResourceExtended} */ (
    jspb.Message.getWrapperField(this, models_pb.ResourceExtended, 1));
};


/**
 * @param {?proto.azdext.ResourceExtended|undefined} value
 * @return {!proto.azdext.PromptResourceGroupResourceResponse} returns this
*/
proto.azdext.PromptResourceGroupResourceResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptResourceGroupResourceResponse} returns this
 */
proto.azdext.PromptResourceGroupResourceResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceGroupResourceResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.ConfirmOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.ConfirmOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.ConfirmOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.ConfirmOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
defaultValue: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
helpMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
hint: jspb.Message.getFieldWithDefault(msg, 4, ""),
placeholder: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.ConfirmOptions}
 */
proto.azdext.ConfirmOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.ConfirmOptions;
  return proto.azdext.ConfirmOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.ConfirmOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.ConfirmOptions}
 */
proto.azdext.ConfirmOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHint(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceholder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.ConfirmOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.ConfirmOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.ConfirmOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.ConfirmOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHelpMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceholder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool default_value = 1;
 * @return {boolean}
 */
proto.azdext.ConfirmOptions.prototype.getDefaultValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.ConfirmOptions} returns this
 */
proto.azdext.ConfirmOptions.prototype.setDefaultValue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.ConfirmOptions} returns this
 */
proto.azdext.ConfirmOptions.prototype.clearDefaultValue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.ConfirmOptions.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.azdext.ConfirmOptions.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.ConfirmOptions} returns this
 */
proto.azdext.ConfirmOptions.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string help_message = 3;
 * @return {string}
 */
proto.azdext.ConfirmOptions.prototype.getHelpMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.ConfirmOptions} returns this
 */
proto.azdext.ConfirmOptions.prototype.setHelpMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hint = 4;
 * @return {string}
 */
proto.azdext.ConfirmOptions.prototype.getHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.ConfirmOptions} returns this
 */
proto.azdext.ConfirmOptions.prototype.setHint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeholder = 5;
 * @return {string}
 */
proto.azdext.ConfirmOptions.prototype.getPlaceholder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.ConfirmOptions} returns this
 */
proto.azdext.ConfirmOptions.prototype.setPlaceholder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
message: jspb.Message.getFieldWithDefault(msg, 1, ""),
helpMessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
hint: jspb.Message.getFieldWithDefault(msg, 3, ""),
placeholder: jspb.Message.getFieldWithDefault(msg, 4, ""),
validationMessage: jspb.Message.getFieldWithDefault(msg, 5, ""),
requiredMessage: jspb.Message.getFieldWithDefault(msg, 6, ""),
required: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
defaultValue: jspb.Message.getFieldWithDefault(msg, 8, ""),
clearOnCompletion: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
ignoreHintKeys: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptOptions}
 */
proto.azdext.PromptOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptOptions;
  return proto.azdext.PromptOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptOptions}
 */
proto.azdext.PromptOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHint(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceholder(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationMessage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequiredMessage(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequired(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValue(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearOnCompletion(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreHintKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHelpMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlaceholder();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidationMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRequiredMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequired();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDefaultValue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getClearOnCompletion();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIgnoreHintKeys();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string help_message = 2;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getHelpMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setHelpMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hint = 3;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setHint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string placeholder = 4;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getPlaceholder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setPlaceholder = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string validation_message = 5;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getValidationMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setValidationMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string required_message = 6;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getRequiredMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setRequiredMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool required = 7;
 * @return {boolean}
 */
proto.azdext.PromptOptions.prototype.getRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string default_value = 8;
 * @return {string}
 */
proto.azdext.PromptOptions.prototype.getDefaultValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setDefaultValue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool clear_on_completion = 9;
 * @return {boolean}
 */
proto.azdext.PromptOptions.prototype.getClearOnCompletion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setClearOnCompletion = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool ignore_hint_keys = 10;
 * @return {boolean}
 */
proto.azdext.PromptOptions.prototype.getIgnoreHintKeys = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.PromptOptions} returns this
 */
proto.azdext.PromptOptions.prototype.setIgnoreHintKeys = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.SelectChoice.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.SelectChoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.SelectChoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectChoice.toObject = function(includeInstance, msg) {
  var f, obj = {
value: jspb.Message.getFieldWithDefault(msg, 1, ""),
label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.SelectChoice}
 */
proto.azdext.SelectChoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.SelectChoice;
  return proto.azdext.SelectChoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.SelectChoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.SelectChoice}
 */
proto.azdext.SelectChoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.SelectChoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.SelectChoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.SelectChoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectChoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.azdext.SelectChoice.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.SelectChoice} returns this
 */
proto.azdext.SelectChoice.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.azdext.SelectChoice.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.SelectChoice} returns this
 */
proto.azdext.SelectChoice.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.MultiSelectChoice.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.MultiSelectChoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.MultiSelectChoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectChoice.toObject = function(includeInstance, msg) {
  var f, obj = {
value: jspb.Message.getFieldWithDefault(msg, 1, ""),
label: jspb.Message.getFieldWithDefault(msg, 2, ""),
selected: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.MultiSelectChoice}
 */
proto.azdext.MultiSelectChoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.MultiSelectChoice;
  return proto.azdext.MultiSelectChoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.MultiSelectChoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.MultiSelectChoice}
 */
proto.azdext.MultiSelectChoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSelected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.MultiSelectChoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.MultiSelectChoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.MultiSelectChoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectChoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSelected();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.azdext.MultiSelectChoice.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.MultiSelectChoice} returns this
 */
proto.azdext.MultiSelectChoice.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.azdext.MultiSelectChoice.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.MultiSelectChoice} returns this
 */
proto.azdext.MultiSelectChoice.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool selected = 3;
 * @return {boolean}
 */
proto.azdext.MultiSelectChoice.prototype.getSelected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.MultiSelectChoice} returns this
 */
proto.azdext.MultiSelectChoice.prototype.setSelected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.azdext.SelectOptions.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.SelectOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.SelectOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.SelectOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
selectedIndex: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
message: jspb.Message.getFieldWithDefault(msg, 2, ""),
choicesList: jspb.Message.toObjectList(msg.getChoicesList(),
    proto.azdext.SelectChoice.toObject, includeInstance),
helpMessage: jspb.Message.getFieldWithDefault(msg, 4, ""),
hint: jspb.Message.getFieldWithDefault(msg, 5, ""),
displayCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
displayNumbers: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
enableFiltering: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.SelectOptions}
 */
proto.azdext.SelectOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.SelectOptions;
  return proto.azdext.SelectOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.SelectOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.SelectOptions}
 */
proto.azdext.SelectOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSelectedIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.azdext.SelectChoice;
      reader.readMessage(value,proto.azdext.SelectChoice.deserializeBinaryFromReader);
      msg.addChoices(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHint(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayCount(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisplayNumbers(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableFiltering(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.SelectOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.SelectOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.SelectOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.SelectOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.azdext.SelectChoice.serializeBinaryToWriter
    );
  }
  f = message.getHelpMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHint();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayCount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int32 selected_index = 1;
 * @return {number}
 */
proto.azdext.SelectOptions.prototype.getSelectedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setSelectedIndex = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.clearSelectedIndex = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.SelectOptions.prototype.hasSelectedIndex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.azdext.SelectOptions.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SelectChoice choices = 3;
 * @return {!Array<!proto.azdext.SelectChoice>}
 */
proto.azdext.SelectOptions.prototype.getChoicesList = function() {
  return /** @type{!Array<!proto.azdext.SelectChoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.azdext.SelectChoice, 3));
};


/**
 * @param {!Array<!proto.azdext.SelectChoice>} value
 * @return {!proto.azdext.SelectOptions} returns this
*/
proto.azdext.SelectOptions.prototype.setChoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.azdext.SelectChoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.azdext.SelectChoice}
 */
proto.azdext.SelectOptions.prototype.addChoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.azdext.SelectChoice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};


/**
 * optional string help_message = 4;
 * @return {string}
 */
proto.azdext.SelectOptions.prototype.getHelpMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setHelpMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string hint = 5;
 * @return {string}
 */
proto.azdext.SelectOptions.prototype.getHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setHint = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 display_count = 6;
 * @return {number}
 */
proto.azdext.SelectOptions.prototype.getDisplayCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setDisplayCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool display_numbers = 7;
 * @return {boolean}
 */
proto.azdext.SelectOptions.prototype.getDisplayNumbers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setDisplayNumbers = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.clearDisplayNumbers = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.SelectOptions.prototype.hasDisplayNumbers = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool enable_filtering = 8;
 * @return {boolean}
 */
proto.azdext.SelectOptions.prototype.getEnableFiltering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.setEnableFiltering = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.SelectOptions} returns this
 */
proto.azdext.SelectOptions.prototype.clearEnableFiltering = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.SelectOptions.prototype.hasEnableFiltering = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.azdext.MultiSelectOptions.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.MultiSelectOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.MultiSelectOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.MultiSelectOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
message: jspb.Message.getFieldWithDefault(msg, 1, ""),
choicesList: jspb.Message.toObjectList(msg.getChoicesList(),
    proto.azdext.MultiSelectChoice.toObject, includeInstance),
helpMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
hint: jspb.Message.getFieldWithDefault(msg, 4, ""),
displayCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
displayNumbers: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
enableFiltering: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.MultiSelectOptions}
 */
proto.azdext.MultiSelectOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.MultiSelectOptions;
  return proto.azdext.MultiSelectOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.MultiSelectOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.MultiSelectOptions}
 */
proto.azdext.MultiSelectOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = new proto.azdext.MultiSelectChoice;
      reader.readMessage(value,proto.azdext.MultiSelectChoice.deserializeBinaryFromReader);
      msg.addChoices(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHint(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayCount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisplayNumbers(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableFiltering(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.MultiSelectOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.MultiSelectOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.MultiSelectOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.MultiSelectOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.azdext.MultiSelectChoice.serializeBinaryToWriter
    );
  }
  f = message.getHelpMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDisplayCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.azdext.MultiSelectOptions.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated MultiSelectChoice choices = 2;
 * @return {!Array<!proto.azdext.MultiSelectChoice>}
 */
proto.azdext.MultiSelectOptions.prototype.getChoicesList = function() {
  return /** @type{!Array<!proto.azdext.MultiSelectChoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.azdext.MultiSelectChoice, 2));
};


/**
 * @param {!Array<!proto.azdext.MultiSelectChoice>} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
*/
proto.azdext.MultiSelectOptions.prototype.setChoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.azdext.MultiSelectChoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.azdext.MultiSelectChoice}
 */
proto.azdext.MultiSelectOptions.prototype.addChoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.azdext.MultiSelectChoice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};


/**
 * optional string help_message = 3;
 * @return {string}
 */
proto.azdext.MultiSelectOptions.prototype.getHelpMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.setHelpMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hint = 4;
 * @return {string}
 */
proto.azdext.MultiSelectOptions.prototype.getHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.setHint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 display_count = 5;
 * @return {number}
 */
proto.azdext.MultiSelectOptions.prototype.getDisplayCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.setDisplayCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool display_numbers = 6;
 * @return {boolean}
 */
proto.azdext.MultiSelectOptions.prototype.getDisplayNumbers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.setDisplayNumbers = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.clearDisplayNumbers = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.MultiSelectOptions.prototype.hasDisplayNumbers = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool enable_filtering = 7;
 * @return {boolean}
 */
proto.azdext.MultiSelectOptions.prototype.getEnableFiltering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.setEnableFiltering = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.MultiSelectOptions} returns this
 */
proto.azdext.MultiSelectOptions.prototype.clearEnableFiltering = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.MultiSelectOptions.prototype.hasEnableFiltering = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.azdext.PromptResourceOptions.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResourceOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResourceOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResourceOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
resourceType: jspb.Message.getFieldWithDefault(msg, 1, ""),
kindsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
resourceTypeDisplayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
selectOptions: (f = msg.getSelectOptions()) && proto.azdext.PromptResourceSelectOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResourceOptions}
 */
proto.azdext.PromptResourceOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResourceOptions;
  return proto.azdext.PromptResourceOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResourceOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResourceOptions}
 */
proto.azdext.PromptResourceOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addKinds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceTypeDisplayName(value);
      break;
    case 4:
      var value = new proto.azdext.PromptResourceSelectOptions;
      reader.readMessage(value,proto.azdext.PromptResourceSelectOptions.deserializeBinaryFromReader);
      msg.setSelectOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResourceOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResourceOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResourceOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKindsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getResourceTypeDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSelectOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.azdext.PromptResourceSelectOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string resource_type = 1;
 * @return {string}
 */
proto.azdext.PromptResourceOptions.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceOptions} returns this
 */
proto.azdext.PromptResourceOptions.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string kinds = 2;
 * @return {!Array<string>}
 */
proto.azdext.PromptResourceOptions.prototype.getKindsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.azdext.PromptResourceOptions} returns this
 */
proto.azdext.PromptResourceOptions.prototype.setKindsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.azdext.PromptResourceOptions} returns this
 */
proto.azdext.PromptResourceOptions.prototype.addKinds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.azdext.PromptResourceOptions} returns this
 */
proto.azdext.PromptResourceOptions.prototype.clearKindsList = function() {
  return this.setKindsList([]);
};


/**
 * optional string resource_type_display_name = 3;
 * @return {string}
 */
proto.azdext.PromptResourceOptions.prototype.getResourceTypeDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceOptions} returns this
 */
proto.azdext.PromptResourceOptions.prototype.setResourceTypeDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PromptResourceSelectOptions select_options = 4;
 * @return {?proto.azdext.PromptResourceSelectOptions}
 */
proto.azdext.PromptResourceOptions.prototype.getSelectOptions = function() {
  return /** @type{?proto.azdext.PromptResourceSelectOptions} */ (
    jspb.Message.getWrapperField(this, proto.azdext.PromptResourceSelectOptions, 4));
};


/**
 * @param {?proto.azdext.PromptResourceSelectOptions|undefined} value
 * @return {!proto.azdext.PromptResourceOptions} returns this
*/
proto.azdext.PromptResourceOptions.prototype.setSelectOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.azdext.PromptResourceOptions} returns this
 */
proto.azdext.PromptResourceOptions.prototype.clearSelectOptions = function() {
  return this.setSelectOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceOptions.prototype.hasSelectOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.azdext.PromptResourceSelectOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.azdext.PromptResourceSelectOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.azdext.PromptResourceSelectOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceSelectOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
forceNewResource: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
allowNewResource: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
newResourceMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
creatingMessage: jspb.Message.getFieldWithDefault(msg, 4, ""),
message: jspb.Message.getFieldWithDefault(msg, 5, ""),
helpMessage: jspb.Message.getFieldWithDefault(msg, 6, ""),
loadingMessage: jspb.Message.getFieldWithDefault(msg, 7, ""),
displayNumbers: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
displayCount: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.azdext.PromptResourceSelectOptions}
 */
proto.azdext.PromptResourceSelectOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.azdext.PromptResourceSelectOptions;
  return proto.azdext.PromptResourceSelectOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.azdext.PromptResourceSelectOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.azdext.PromptResourceSelectOptions}
 */
proto.azdext.PromptResourceSelectOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceNewResource(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowNewResource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewResourceMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatingMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelpMessage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadingMessage(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisplayNumbers(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.azdext.PromptResourceSelectOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.azdext.PromptResourceSelectOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.azdext.PromptResourceSelectOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.azdext.PromptResourceSelectOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNewResourceMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatingMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelpMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLoadingMessage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDisplayCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional bool force_new_resource = 1;
 * @return {boolean}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getForceNewResource = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setForceNewResource = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.clearForceNewResource = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceSelectOptions.prototype.hasForceNewResource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool allow_new_resource = 2;
 * @return {boolean}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getAllowNewResource = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setAllowNewResource = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.clearAllowNewResource = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceSelectOptions.prototype.hasAllowNewResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string new_resource_message = 3;
 * @return {string}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getNewResourceMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setNewResourceMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string creating_message = 4;
 * @return {string}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getCreatingMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setCreatingMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string message = 5;
 * @return {string}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help_message = 6;
 * @return {string}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getHelpMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setHelpMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string loading_message = 7;
 * @return {string}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getLoadingMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setLoadingMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool display_numbers = 8;
 * @return {boolean}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getDisplayNumbers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setDisplayNumbers = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.clearDisplayNumbers = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.azdext.PromptResourceSelectOptions.prototype.hasDisplayNumbers = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 display_count = 9;
 * @return {number}
 */
proto.azdext.PromptResourceSelectOptions.prototype.getDisplayCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.azdext.PromptResourceSelectOptions} returns this
 */
proto.azdext.PromptResourceSelectOptions.prototype.setDisplayCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


goog.object.extend(exports, proto.azdext);
