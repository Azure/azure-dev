# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import environment_pb2 as environment__pb2
import models_pb2 as models__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in environment_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class EnvironmentServiceStub(object):
    """EnvironmentService defines methods for managing environments and their key-value pairs.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurrent = channel.unary_unary(
                '/azdext.EnvironmentService/GetCurrent',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=environment__pb2.EnvironmentResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/azdext.EnvironmentService/List',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=environment__pb2.EnvironmentListResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/azdext.EnvironmentService/Get',
                request_serializer=environment__pb2.GetEnvironmentRequest.SerializeToString,
                response_deserializer=environment__pb2.EnvironmentResponse.FromString,
                _registered_method=True)
        self.Select = channel.unary_unary(
                '/azdext.EnvironmentService/Select',
                request_serializer=environment__pb2.SelectEnvironmentRequest.SerializeToString,
                response_deserializer=models__pb2.EmptyResponse.FromString,
                _registered_method=True)
        self.GetValues = channel.unary_unary(
                '/azdext.EnvironmentService/GetValues',
                request_serializer=environment__pb2.GetEnvironmentRequest.SerializeToString,
                response_deserializer=environment__pb2.KeyValueListResponse.FromString,
                _registered_method=True)
        self.GetValue = channel.unary_unary(
                '/azdext.EnvironmentService/GetValue',
                request_serializer=environment__pb2.GetEnvRequest.SerializeToString,
                response_deserializer=environment__pb2.KeyValueResponse.FromString,
                _registered_method=True)
        self.SetValue = channel.unary_unary(
                '/azdext.EnvironmentService/SetValue',
                request_serializer=environment__pb2.SetEnvRequest.SerializeToString,
                response_deserializer=models__pb2.EmptyResponse.FromString,
                _registered_method=True)
        self.GetConfig = channel.unary_unary(
                '/azdext.EnvironmentService/GetConfig',
                request_serializer=environment__pb2.GetConfigRequest.SerializeToString,
                response_deserializer=environment__pb2.GetConfigResponse.FromString,
                _registered_method=True)
        self.GetConfigString = channel.unary_unary(
                '/azdext.EnvironmentService/GetConfigString',
                request_serializer=environment__pb2.GetConfigStringRequest.SerializeToString,
                response_deserializer=environment__pb2.GetConfigStringResponse.FromString,
                _registered_method=True)
        self.GetConfigSection = channel.unary_unary(
                '/azdext.EnvironmentService/GetConfigSection',
                request_serializer=environment__pb2.GetConfigSectionRequest.SerializeToString,
                response_deserializer=environment__pb2.GetConfigSectionResponse.FromString,
                _registered_method=True)
        self.SetConfig = channel.unary_unary(
                '/azdext.EnvironmentService/SetConfig',
                request_serializer=environment__pb2.SetConfigRequest.SerializeToString,
                response_deserializer=models__pb2.EmptyResponse.FromString,
                _registered_method=True)
        self.UnsetConfig = channel.unary_unary(
                '/azdext.EnvironmentService/UnsetConfig',
                request_serializer=environment__pb2.UnsetConfigRequest.SerializeToString,
                response_deserializer=models__pb2.EmptyResponse.FromString,
                _registered_method=True)


class EnvironmentServiceServicer(object):
    """EnvironmentService defines methods for managing environments and their key-value pairs.
    """

    def GetCurrent(self, request, context):
        """Gets the current environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List retrieves all azd environments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Get retrieves an environment by its name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Select(self, request, context):
        """Select sets the current environment to the specified environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValues(self, request, context):
        """GetValues retrieves all key-value pairs in the specified environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValue(self, request, context):
        """GetValue retrieves the value of a specific key in the specified environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetValue(self, request, context):
        """SetValue sets the value of a key in the specified environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """GetConfig retrieves a config value by path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfigString(self, request, context):
        """GetConfigString retrieves a config value by path and returns it as a string
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfigSection(self, request, context):
        """GetConfigSection retrieves a config section by path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfig(self, request, context):
        """SetConfig sets a config value at a given path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsetConfig(self, request, context):
        """UnsetConfig removes a config value at a given path
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurrent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrent,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=environment__pb2.EnvironmentResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=environment__pb2.EnvironmentListResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=environment__pb2.GetEnvironmentRequest.FromString,
                    response_serializer=environment__pb2.EnvironmentResponse.SerializeToString,
            ),
            'Select': grpc.unary_unary_rpc_method_handler(
                    servicer.Select,
                    request_deserializer=environment__pb2.SelectEnvironmentRequest.FromString,
                    response_serializer=models__pb2.EmptyResponse.SerializeToString,
            ),
            'GetValues': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValues,
                    request_deserializer=environment__pb2.GetEnvironmentRequest.FromString,
                    response_serializer=environment__pb2.KeyValueListResponse.SerializeToString,
            ),
            'GetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValue,
                    request_deserializer=environment__pb2.GetEnvRequest.FromString,
                    response_serializer=environment__pb2.KeyValueResponse.SerializeToString,
            ),
            'SetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SetValue,
                    request_deserializer=environment__pb2.SetEnvRequest.FromString,
                    response_serializer=models__pb2.EmptyResponse.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=environment__pb2.GetConfigRequest.FromString,
                    response_serializer=environment__pb2.GetConfigResponse.SerializeToString,
            ),
            'GetConfigString': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigString,
                    request_deserializer=environment__pb2.GetConfigStringRequest.FromString,
                    response_serializer=environment__pb2.GetConfigStringResponse.SerializeToString,
            ),
            'GetConfigSection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigSection,
                    request_deserializer=environment__pb2.GetConfigSectionRequest.FromString,
                    response_serializer=environment__pb2.GetConfigSectionResponse.SerializeToString,
            ),
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=environment__pb2.SetConfigRequest.FromString,
                    response_serializer=models__pb2.EmptyResponse.SerializeToString,
            ),
            'UnsetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsetConfig,
                    request_deserializer=environment__pb2.UnsetConfigRequest.FromString,
                    response_serializer=models__pb2.EmptyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'azdext.EnvironmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('azdext.EnvironmentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EnvironmentService(object):
    """EnvironmentService defines methods for managing environments and their key-value pairs.
    """

    @staticmethod
    def GetCurrent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/GetCurrent',
            models__pb2.EmptyRequest.SerializeToString,
            environment__pb2.EnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/List',
            models__pb2.EmptyRequest.SerializeToString,
            environment__pb2.EnvironmentListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/Get',
            environment__pb2.GetEnvironmentRequest.SerializeToString,
            environment__pb2.EnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Select(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/Select',
            environment__pb2.SelectEnvironmentRequest.SerializeToString,
            models__pb2.EmptyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/GetValues',
            environment__pb2.GetEnvironmentRequest.SerializeToString,
            environment__pb2.KeyValueListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/GetValue',
            environment__pb2.GetEnvRequest.SerializeToString,
            environment__pb2.KeyValueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/SetValue',
            environment__pb2.SetEnvRequest.SerializeToString,
            models__pb2.EmptyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/GetConfig',
            environment__pb2.GetConfigRequest.SerializeToString,
            environment__pb2.GetConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConfigString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/GetConfigString',
            environment__pb2.GetConfigStringRequest.SerializeToString,
            environment__pb2.GetConfigStringResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConfigSection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/GetConfigSection',
            environment__pb2.GetConfigSectionRequest.SerializeToString,
            environment__pb2.GetConfigSectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/SetConfig',
            environment__pb2.SetConfigRequest.SerializeToString,
            models__pb2.EmptyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnsetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.EnvironmentService/UnsetConfig',
            environment__pb2.UnsetConfigRequest.SerializeToString,
            models__pb2.EmptyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
