# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import prompt_pb2 as prompt__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in prompt_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PromptServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PromptSubscription = channel.unary_unary(
                '/azdext.PromptService/PromptSubscription',
                request_serializer=prompt__pb2.PromptSubscriptionRequest.SerializeToString,
                response_deserializer=prompt__pb2.PromptSubscriptionResponse.FromString,
                _registered_method=True)
        self.PromptLocation = channel.unary_unary(
                '/azdext.PromptService/PromptLocation',
                request_serializer=prompt__pb2.PromptLocationRequest.SerializeToString,
                response_deserializer=prompt__pb2.PromptLocationResponse.FromString,
                _registered_method=True)
        self.PromptResourceGroup = channel.unary_unary(
                '/azdext.PromptService/PromptResourceGroup',
                request_serializer=prompt__pb2.PromptResourceGroupRequest.SerializeToString,
                response_deserializer=prompt__pb2.PromptResourceGroupResponse.FromString,
                _registered_method=True)
        self.Confirm = channel.unary_unary(
                '/azdext.PromptService/Confirm',
                request_serializer=prompt__pb2.ConfirmRequest.SerializeToString,
                response_deserializer=prompt__pb2.ConfirmResponse.FromString,
                _registered_method=True)
        self.Prompt = channel.unary_unary(
                '/azdext.PromptService/Prompt',
                request_serializer=prompt__pb2.PromptRequest.SerializeToString,
                response_deserializer=prompt__pb2.PromptResponse.FromString,
                _registered_method=True)
        self.Select = channel.unary_unary(
                '/azdext.PromptService/Select',
                request_serializer=prompt__pb2.SelectRequest.SerializeToString,
                response_deserializer=prompt__pb2.SelectResponse.FromString,
                _registered_method=True)
        self.MultiSelect = channel.unary_unary(
                '/azdext.PromptService/MultiSelect',
                request_serializer=prompt__pb2.MultiSelectRequest.SerializeToString,
                response_deserializer=prompt__pb2.MultiSelectResponse.FromString,
                _registered_method=True)
        self.PromptSubscriptionResource = channel.unary_unary(
                '/azdext.PromptService/PromptSubscriptionResource',
                request_serializer=prompt__pb2.PromptSubscriptionResourceRequest.SerializeToString,
                response_deserializer=prompt__pb2.PromptSubscriptionResourceResponse.FromString,
                _registered_method=True)
        self.PromptResourceGroupResource = channel.unary_unary(
                '/azdext.PromptService/PromptResourceGroupResource',
                request_serializer=prompt__pb2.PromptResourceGroupResourceRequest.SerializeToString,
                response_deserializer=prompt__pb2.PromptResourceGroupResourceResponse.FromString,
                _registered_method=True)


class PromptServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PromptSubscription(self, request, context):
        """PromptSubscription prompts the user to select a subscription.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PromptLocation(self, request, context):
        """PromptLocation prompts the user to select a location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PromptResourceGroup(self, request, context):
        """PromptResourceGroup prompts the user to select a resource group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Confirm(self, request, context):
        """Confirm prompts the user to confirm an action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Prompt(self, request, context):
        """Prompt prompts the user for text input.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Select(self, request, context):
        """Select prompts the user to select an option from a list.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MultiSelect(self, request, context):
        """MultiSelect prompts the user to select multiple options from a list.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PromptSubscriptionResource(self, request, context):
        """PromptSubscriptionResource prompts the user to select a resource from a subscription.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PromptResourceGroupResource(self, request, context):
        """PromptResourceGroupResource prompts the user to select a resource from a resource group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PromptServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PromptSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.PromptSubscription,
                    request_deserializer=prompt__pb2.PromptSubscriptionRequest.FromString,
                    response_serializer=prompt__pb2.PromptSubscriptionResponse.SerializeToString,
            ),
            'PromptLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.PromptLocation,
                    request_deserializer=prompt__pb2.PromptLocationRequest.FromString,
                    response_serializer=prompt__pb2.PromptLocationResponse.SerializeToString,
            ),
            'PromptResourceGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.PromptResourceGroup,
                    request_deserializer=prompt__pb2.PromptResourceGroupRequest.FromString,
                    response_serializer=prompt__pb2.PromptResourceGroupResponse.SerializeToString,
            ),
            'Confirm': grpc.unary_unary_rpc_method_handler(
                    servicer.Confirm,
                    request_deserializer=prompt__pb2.ConfirmRequest.FromString,
                    response_serializer=prompt__pb2.ConfirmResponse.SerializeToString,
            ),
            'Prompt': grpc.unary_unary_rpc_method_handler(
                    servicer.Prompt,
                    request_deserializer=prompt__pb2.PromptRequest.FromString,
                    response_serializer=prompt__pb2.PromptResponse.SerializeToString,
            ),
            'Select': grpc.unary_unary_rpc_method_handler(
                    servicer.Select,
                    request_deserializer=prompt__pb2.SelectRequest.FromString,
                    response_serializer=prompt__pb2.SelectResponse.SerializeToString,
            ),
            'MultiSelect': grpc.unary_unary_rpc_method_handler(
                    servicer.MultiSelect,
                    request_deserializer=prompt__pb2.MultiSelectRequest.FromString,
                    response_serializer=prompt__pb2.MultiSelectResponse.SerializeToString,
            ),
            'PromptSubscriptionResource': grpc.unary_unary_rpc_method_handler(
                    servicer.PromptSubscriptionResource,
                    request_deserializer=prompt__pb2.PromptSubscriptionResourceRequest.FromString,
                    response_serializer=prompt__pb2.PromptSubscriptionResourceResponse.SerializeToString,
            ),
            'PromptResourceGroupResource': grpc.unary_unary_rpc_method_handler(
                    servicer.PromptResourceGroupResource,
                    request_deserializer=prompt__pb2.PromptResourceGroupResourceRequest.FromString,
                    response_serializer=prompt__pb2.PromptResourceGroupResourceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'azdext.PromptService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('azdext.PromptService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PromptService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PromptSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/PromptSubscription',
            prompt__pb2.PromptSubscriptionRequest.SerializeToString,
            prompt__pb2.PromptSubscriptionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PromptLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/PromptLocation',
            prompt__pb2.PromptLocationRequest.SerializeToString,
            prompt__pb2.PromptLocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PromptResourceGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/PromptResourceGroup',
            prompt__pb2.PromptResourceGroupRequest.SerializeToString,
            prompt__pb2.PromptResourceGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Confirm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/Confirm',
            prompt__pb2.ConfirmRequest.SerializeToString,
            prompt__pb2.ConfirmResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Prompt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/Prompt',
            prompt__pb2.PromptRequest.SerializeToString,
            prompt__pb2.PromptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Select(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/Select',
            prompt__pb2.SelectRequest.SerializeToString,
            prompt__pb2.SelectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MultiSelect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/MultiSelect',
            prompt__pb2.MultiSelectRequest.SerializeToString,
            prompt__pb2.MultiSelectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PromptSubscriptionResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/PromptSubscriptionResource',
            prompt__pb2.PromptSubscriptionResourceRequest.SerializeToString,
            prompt__pb2.PromptSubscriptionResourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PromptResourceGroupResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/azdext.PromptService/PromptResourceGroupResource',
            prompt__pb2.PromptResourceGroupResourceRequest.SerializeToString,
            prompt__pb2.PromptResourceGroupResourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
