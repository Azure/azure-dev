syntax = "proto3";

package azdext;

option go_package = "github.com/azure/azure-dev/cli/azd/pkg/azdext/gen;azdext";

// The EventsService allows clients to subscribe and receive event notifications
service EventService {
  // Bidirectional stream for event subscription, invocation, and status updates
  rpc EventStream (stream EventMessage) returns (stream EventMessage);
}

// Represents different types of messages sent over the stream
message EventMessage {
  oneof message_type {
    SubscribeMessage subscribe = 1; // Client -> Server (Subscription request)
    InvokeMessage invoke = 2;       // Server -> Client (Event notification)
    StatusMessage status = 3;       // Client -> Server (Status updates)
  }
}

// Client subscribes to events
message SubscribeMessage {
  repeated string event_names = 1;  // List of event names the client wants to listen for
}

// Server notifies clients about an event
message InvokeMessage {
  string event_name = 1;  // The event being triggered
  map<string, string> args = 2; // Key-value arguments for the event
}

// Client sends status updates back to the server
message StatusMessage {
  string event_name = 1;   // The event this status update is for
  string status = 2;       // "running", "completed", "failed", etc.
  string message = 3;      // Optional additional status details
}
