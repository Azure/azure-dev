api-version: 2024-02-02-preview
location: {{ .Env.AZURE_LOCATION }}
identity:
  type: UserAssigned
  userAssignedIdentities:
    ? "{{ .Env.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}"
    : {}
properties:
  environmentId: {{ .Env.AZURE_CONTAINER_APPS_ENVIRONMENT_ID }}
  configuration:
    activeRevisionsMode: single
    runtime:
      dotnet:
        autoConfigureDataProtection: true
    ingress:
      external: false
      targetPort: 3306
      transport: tcp
      allowInsecure: false
    registries:
      - server: {{ .Env.AZURE_CONTAINER_REGISTRY_ENDPOINT }}
        identity: {{ .Env.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}
    secrets:
      - name: mysql-root-password
        value: '{{ securedParameter "my_sql_abstract_password" }}'
      - name: specialchar
        value: '{{ securedParameter "my_sql_abstract_pas_sw_ord" }}'
  template:
    volumes:
      - name: my-sql-abstract-projectapphost-volume-two
        storageType: AzureFile
        storageName: {{ .Env.SERVICE_MY_SQL_ABSTRACT_VOLUME_PROJECTAPPHOST_VOLUME_TWO_NAME }} 
    containers:
      - image: {{ .Image }}
        name: my-sql-abstract
        env:
          - name: AZURE_CLIENT_ID
            value: {{ .Env.MANAGED_IDENTITY_CLIENT_ID }}
          - name: resolve_http_binding
            value: http://mysqlabstract.internal.{{ .Env.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN }}
          - name: resolve_tcp_binding
            value: tcp://mysqlabstract:3306
          - name: MYSQL_ROOT_PASSWORD
            secretRef: mysql-root-password
          - name: SpecialChar
            secretRef: specialchar
        volumeMounts:
          - volumeName: my-sql-abstract-projectapphost-volume-two
            mountPath: /data/db
    scale:
      minReplicas: 1
tags:
  azd-service-name: my-sql-abstract
  aspire-resource-name: my-sql-abstract

