// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: models.proto

package azdext

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Artifact kinds - matching the existing Go ArtifactKind enum
type ArtifactKind int32

const (
	ArtifactKind_ARTIFACT_KIND_UNSPECIFIED ArtifactKind = 0 // Default/unknown artifact kind
	ArtifactKind_ARTIFACT_KIND_DIRECTORY   ArtifactKind = 1 // Directory containing project or build artifacts
	ArtifactKind_ARTIFACT_KIND_CONFIG      ArtifactKind = 2 // Configuration file
	ArtifactKind_ARTIFACT_KIND_ARCHIVE     ArtifactKind = 3 // Zip/archive package
	ArtifactKind_ARTIFACT_KIND_CONTAINER   ArtifactKind = 4 // Docker/container image
	ArtifactKind_ARTIFACT_KIND_ENDPOINT    ArtifactKind = 5 // Service endpoint URL
	ArtifactKind_ARTIFACT_KIND_DEPLOYMENT  ArtifactKind = 6 // Deployment result or endpoint
	ArtifactKind_ARTIFACT_KIND_RESOURCE    ArtifactKind = 7 // Azure Resource
)

// Enum value maps for ArtifactKind.
var (
	ArtifactKind_name = map[int32]string{
		0: "ARTIFACT_KIND_UNSPECIFIED",
		1: "ARTIFACT_KIND_DIRECTORY",
		2: "ARTIFACT_KIND_CONFIG",
		3: "ARTIFACT_KIND_ARCHIVE",
		4: "ARTIFACT_KIND_CONTAINER",
		5: "ARTIFACT_KIND_ENDPOINT",
		6: "ARTIFACT_KIND_DEPLOYMENT",
		7: "ARTIFACT_KIND_RESOURCE",
	}
	ArtifactKind_value = map[string]int32{
		"ARTIFACT_KIND_UNSPECIFIED": 0,
		"ARTIFACT_KIND_DIRECTORY":   1,
		"ARTIFACT_KIND_CONFIG":      2,
		"ARTIFACT_KIND_ARCHIVE":     3,
		"ARTIFACT_KIND_CONTAINER":   4,
		"ARTIFACT_KIND_ENDPOINT":    5,
		"ARTIFACT_KIND_DEPLOYMENT":  6,
		"ARTIFACT_KIND_RESOURCE":    7,
	}
)

func (x ArtifactKind) Enum() *ArtifactKind {
	p := new(ArtifactKind)
	*p = x
	return p
}

func (x ArtifactKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactKind) Descriptor() protoreflect.EnumDescriptor {
	return file_models_proto_enumTypes[0].Descriptor()
}

func (ArtifactKind) Type() protoreflect.EnumType {
	return &file_models_proto_enumTypes[0]
}

func (x ArtifactKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactKind.Descriptor instead.
func (ArtifactKind) EnumDescriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{0}
}

// Location kinds - matching the existing Go LocationKind enum
type LocationKind int32

const (
	LocationKind_LOCATION_KIND_UNSPECIFIED LocationKind = 0 // Default/unknown location
	LocationKind_LOCATION_KIND_LOCAL       LocationKind = 1 // Local file system path
	LocationKind_LOCATION_KIND_REMOTE      LocationKind = 2 // Remote URL/URI
)

// Enum value maps for LocationKind.
var (
	LocationKind_name = map[int32]string{
		0: "LOCATION_KIND_UNSPECIFIED",
		1: "LOCATION_KIND_LOCAL",
		2: "LOCATION_KIND_REMOTE",
	}
	LocationKind_value = map[string]int32{
		"LOCATION_KIND_UNSPECIFIED": 0,
		"LOCATION_KIND_LOCAL":       1,
		"LOCATION_KIND_REMOTE":      2,
	}
)

func (x LocationKind) Enum() *LocationKind {
	p := new(LocationKind)
	*p = x
	return p
}

func (x LocationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_models_proto_enumTypes[1].Descriptor()
}

func (LocationKind) Type() protoreflect.EnumType {
	return &file_models_proto_enumTypes[1]
}

func (x LocationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocationKind.Descriptor instead.
func (LocationKind) EnumDescriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{1}
}

// Messages for requests and responses
type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{0}
}

// EmptyResponse message for methods with no output.
type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{1}
}

// Message representing a Subscription
type Subscription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TenantId      string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserTenantId  string                 `protobuf:"bytes,4,opt,name=user_tenant_id,json=userTenantId,proto3" json:"user_tenant_id,omitempty"`
	IsDefault     bool                   `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{2}
}

func (x *Subscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subscription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subscription) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Subscription) GetUserTenantId() string {
	if x != nil {
		return x.UserTenantId
	}
	return ""
}

func (x *Subscription) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type ResourceGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location      string                 `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceGroup) Reset() {
	*x = ResourceGroup{}
	mi := &file_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroup) ProtoMessage() {}

func (x *ResourceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroup.ProtoReflect.Descriptor instead.
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceGroup) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type Location struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName         string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	RegionalDisplayName string                 `protobuf:"bytes,3,opt,name=regional_display_name,json=regionalDisplayName,proto3" json:"regional_display_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{4}
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Location) GetRegionalDisplayName() string {
	if x != nil {
		return x.RegionalDisplayName
	}
	return ""
}

type AzureScope struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantId       string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	SubscriptionId string                 `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Location       string                 `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	ResourceGroup  string                 `protobuf:"bytes,4,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AzureScope) Reset() {
	*x = AzureScope{}
	mi := &file_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureScope) ProtoMessage() {}

func (x *AzureScope) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureScope.ProtoReflect.Descriptor instead.
func (*AzureScope) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{5}
}

func (x *AzureScope) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *AzureScope) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *AzureScope) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AzureScope) GetResourceGroup() string {
	if x != nil {
		return x.ResourceGroup
	}
	return ""
}

type AzureContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         *AzureScope            `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Resources     []string               `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureContext) Reset() {
	*x = AzureContext{}
	mi := &file_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureContext) ProtoMessage() {}

func (x *AzureContext) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureContext.ProtoReflect.Descriptor instead.
func (*AzureContext) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{6}
}

func (x *AzureContext) GetScope() *AzureScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *AzureContext) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Location      string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{7}
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ResourceExtended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Location      string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Kind          string                 `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceExtended) Reset() {
	*x = ResourceExtended{}
	mi := &file_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceExtended) ProtoMessage() {}

func (x *ResourceExtended) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceExtended.ProtoReflect.Descriptor instead.
func (*ResourceExtended) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceExtended) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceExtended) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceExtended) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceExtended) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ResourceExtended) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

// ProjectConfig message definition
type ProjectConfig struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	Name              string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ResourceGroupName string                    `protobuf:"bytes,2,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	Path              string                    `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Metadata          *ProjectMetadata          `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Services          map[string]*ServiceConfig `protobuf:"bytes,5,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Infra             *InfraOptions             `protobuf:"bytes,6,opt,name=infra,proto3" json:"infra,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProjectConfig) Reset() {
	*x = ProjectConfig{}
	mi := &file_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectConfig) ProtoMessage() {}

func (x *ProjectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectConfig.ProtoReflect.Descriptor instead.
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectConfig) GetResourceGroupName() string {
	if x != nil {
		return x.ResourceGroupName
	}
	return ""
}

func (x *ProjectConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProjectConfig) GetMetadata() *ProjectMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ProjectConfig) GetServices() map[string]*ServiceConfig {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ProjectConfig) GetInfra() *InfraOptions {
	if x != nil {
		return x.Infra
	}
	return nil
}

// RequiredVersions message definition
type RequiredVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Azd           string                 `protobuf:"bytes,1,opt,name=azd,proto3" json:"azd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequiredVersions) Reset() {
	*x = RequiredVersions{}
	mi := &file_models_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequiredVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequiredVersions) ProtoMessage() {}

func (x *RequiredVersions) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequiredVersions.ProtoReflect.Descriptor instead.
func (*RequiredVersions) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{10}
}

func (x *RequiredVersions) GetAzd() string {
	if x != nil {
		return x.Azd
	}
	return ""
}

// ProjectMetadata message definition
type ProjectMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      string                 `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectMetadata) Reset() {
	*x = ProjectMetadata{}
	mi := &file_models_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMetadata) ProtoMessage() {}

func (x *ProjectMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMetadata.ProtoReflect.Descriptor instead.
func (*ProjectMetadata) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{11}
}

func (x *ProjectMetadata) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

// ServiceConfig message definition
type ServiceConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ResourceGroupName string                 `protobuf:"bytes,2,opt,name=resource_group_name,json=resourceGroupName,proto3" json:"resource_group_name,omitempty"`
	ResourceName      string                 `protobuf:"bytes,3,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ApiVersion        string                 `protobuf:"bytes,4,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	RelativePath      string                 `protobuf:"bytes,5,opt,name=relative_path,json=relativePath,proto3" json:"relative_path,omitempty"`
	Host              string                 `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Language          string                 `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	OutputPath        string                 `protobuf:"bytes,8,opt,name=output_path,json=outputPath,proto3" json:"output_path,omitempty"`
	Image             string                 `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`
	Docker            *DockerProjectOptions  `protobuf:"bytes,10,opt,name=docker,proto3" json:"docker,omitempty"`
	Config            *structpb.Struct       `protobuf:"bytes,11,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ServiceConfig) Reset() {
	*x = ServiceConfig{}
	mi := &file_models_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceConfig) ProtoMessage() {}

func (x *ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceConfig.ProtoReflect.Descriptor instead.
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{12}
}

func (x *ServiceConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceConfig) GetResourceGroupName() string {
	if x != nil {
		return x.ResourceGroupName
	}
	return ""
}

func (x *ServiceConfig) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ServiceConfig) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ServiceConfig) GetRelativePath() string {
	if x != nil {
		return x.RelativePath
	}
	return ""
}

func (x *ServiceConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServiceConfig) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ServiceConfig) GetOutputPath() string {
	if x != nil {
		return x.OutputPath
	}
	return ""
}

func (x *ServiceConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ServiceConfig) GetDocker() *DockerProjectOptions {
	if x != nil {
		return x.Docker
	}
	return nil
}

func (x *ServiceConfig) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

// InfraOptions message definition
type InfraOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Module        string                 `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfraOptions) Reset() {
	*x = InfraOptions{}
	mi := &file_models_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfraOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfraOptions) ProtoMessage() {}

func (x *InfraOptions) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfraOptions.ProtoReflect.Descriptor instead.
func (*InfraOptions) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{13}
}

func (x *InfraOptions) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *InfraOptions) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *InfraOptions) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

// DockerProjectOptions message definition
type DockerProjectOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Context       string                 `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	Platform      string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Target        string                 `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Registry      string                 `protobuf:"bytes,5,opt,name=registry,proto3" json:"registry,omitempty"`
	Image         string                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Tag           string                 `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`
	RemoteBuild   bool                   `protobuf:"varint,8,opt,name=remote_build,json=remoteBuild,proto3" json:"remote_build,omitempty"`
	BuildArgs     []string               `protobuf:"bytes,9,rep,name=build_args,json=buildArgs,proto3" json:"build_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerProjectOptions) Reset() {
	*x = DockerProjectOptions{}
	mi := &file_models_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerProjectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerProjectOptions) ProtoMessage() {}

func (x *DockerProjectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerProjectOptions.ProtoReflect.Descriptor instead.
func (*DockerProjectOptions) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{14}
}

func (x *DockerProjectOptions) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DockerProjectOptions) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *DockerProjectOptions) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *DockerProjectOptions) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *DockerProjectOptions) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *DockerProjectOptions) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DockerProjectOptions) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DockerProjectOptions) GetRemoteBuild() bool {
	if x != nil {
		return x.RemoteBuild
	}
	return false
}

func (x *DockerProjectOptions) GetBuildArgs() []string {
	if x != nil {
		return x.BuildArgs
	}
	return nil
}

// ServiceContext defines the shared pipeline state across all phases of the service lifecycle
type ServiceContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Restore       []*Artifact            `protobuf:"bytes,1,rep,name=restore,proto3" json:"restore,omitempty"`
	Build         []*Artifact            `protobuf:"bytes,2,rep,name=build,proto3" json:"build,omitempty"`
	Package       []*Artifact            `protobuf:"bytes,3,rep,name=package,proto3" json:"package,omitempty"`
	Publish       []*Artifact            `protobuf:"bytes,4,rep,name=publish,proto3" json:"publish,omitempty"`
	Deploy        []*Artifact            `protobuf:"bytes,5,rep,name=deploy,proto3" json:"deploy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceContext) Reset() {
	*x = ServiceContext{}
	mi := &file_models_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceContext) ProtoMessage() {}

func (x *ServiceContext) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceContext.ProtoReflect.Descriptor instead.
func (*ServiceContext) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{15}
}

func (x *ServiceContext) GetRestore() []*Artifact {
	if x != nil {
		return x.Restore
	}
	return nil
}

func (x *ServiceContext) GetBuild() []*Artifact {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *ServiceContext) GetPackage() []*Artifact {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *ServiceContext) GetPublish() []*Artifact {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *ServiceContext) GetDeploy() []*Artifact {
	if x != nil {
		return x.Deploy
	}
	return nil
}

// ArtifactList represents a list of artifacts for map values in ServiceContext
type ArtifactList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artifacts     []*Artifact            `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactList) Reset() {
	*x = ArtifactList{}
	mi := &file_models_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactList) ProtoMessage() {}

func (x *ArtifactList) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactList.ProtoReflect.Descriptor instead.
func (*ArtifactList) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{16}
}

func (x *ArtifactList) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Artifact represents a build, package, or deployment artifact with its location and metadata
type Artifact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          ArtifactKind           `protobuf:"varint,1,opt,name=kind,proto3,enum=azdext.ArtifactKind" json:"kind,omitempty"`                                                         // Required: type of artifact
	Location      string                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`                                                                           // Optional: location of the artifact (local path or remote reference)
	LocationKind  LocationKind           `protobuf:"varint,3,opt,name=location_kind,json=locationKind,proto3,enum=azdext.LocationKind" json:"location_kind,omitempty"`                     // Required: where the artifact is stored
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional: arbitrary key/value pairs for extension-specific data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_models_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_models_proto_rawDescGZIP(), []int{17}
}

func (x *Artifact) GetKind() ArtifactKind {
	if x != nil {
		return x.Kind
	}
	return ArtifactKind_ARTIFACT_KIND_UNSPECIFIED
}

func (x *Artifact) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Artifact) GetLocationKind() LocationKind {
	if x != nil {
		return x.LocationKind
	}
	return LocationKind_LOCATION_KIND_UNSPECIFIED
}

func (x *Artifact) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_models_proto protoreflect.FileDescriptor

const file_models_proto_rawDesc = "" +
	"\n" +
	"\fmodels.proto\x12\x06azdext\x1a$include/google/protobuf/struct.proto\"\x0e\n" +
	"\fEmptyRequest\"\x0f\n" +
	"\rEmptyResponse\"\x94\x01\n" +
	"\fSubscription\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\tR\btenantId\x12$\n" +
	"\x0euser_tenant_id\x18\x04 \x01(\tR\fuserTenantId\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\"O\n" +
	"\rResourceGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\"u\n" +
	"\bLocation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x122\n" +
	"\x15regional_display_name\x18\x03 \x01(\tR\x13regionalDisplayName\"\x95\x01\n" +
	"\n" +
	"AzureScope\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12'\n" +
	"\x0fsubscription_id\x18\x02 \x01(\tR\x0esubscriptionId\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\x12%\n" +
	"\x0eresource_group\x18\x04 \x01(\tR\rresourceGroup\"V\n" +
	"\fAzureContext\x12(\n" +
	"\x05scope\x18\x01 \x01(\v2\x12.azdext.AzureScopeR\x05scope\x12\x1c\n" +
	"\tresources\x18\x02 \x03(\tR\tresources\"^\n" +
	"\bResource\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\"z\n" +
	"\x10ResourceExtended\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12\x12\n" +
	"\x04kind\x18\x05 \x01(\tR\x04kind\"\xdd\x02\n" +
	"\rProjectConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x13resource_group_name\x18\x02 \x01(\tR\x11resourceGroupName\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x123\n" +
	"\bmetadata\x18\x04 \x01(\v2\x17.azdext.ProjectMetadataR\bmetadata\x12?\n" +
	"\bservices\x18\x05 \x03(\v2#.azdext.ProjectConfig.ServicesEntryR\bservices\x12*\n" +
	"\x05infra\x18\x06 \x01(\v2\x14.azdext.InfraOptionsR\x05infra\x1aR\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.azdext.ServiceConfigR\x05value:\x028\x01\"$\n" +
	"\x10RequiredVersions\x12\x10\n" +
	"\x03azd\x18\x01 \x01(\tR\x03azd\"-\n" +
	"\x0fProjectMetadata\x12\x1a\n" +
	"\btemplate\x18\x01 \x01(\tR\btemplate\"\x8c\x03\n" +
	"\rServiceConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x13resource_group_name\x18\x02 \x01(\tR\x11resourceGroupName\x12#\n" +
	"\rresource_name\x18\x03 \x01(\tR\fresourceName\x12\x1f\n" +
	"\vapi_version\x18\x04 \x01(\tR\n" +
	"apiVersion\x12#\n" +
	"\rrelative_path\x18\x05 \x01(\tR\frelativePath\x12\x12\n" +
	"\x04host\x18\x06 \x01(\tR\x04host\x12\x1a\n" +
	"\blanguage\x18\a \x01(\tR\blanguage\x12\x1f\n" +
	"\voutput_path\x18\b \x01(\tR\n" +
	"outputPath\x12\x14\n" +
	"\x05image\x18\t \x01(\tR\x05image\x124\n" +
	"\x06docker\x18\n" +
	" \x01(\v2\x1c.azdext.DockerProjectOptionsR\x06docker\x12/\n" +
	"\x06config\x18\v \x01(\v2\x17.google.protobuf.StructR\x06config\"V\n" +
	"\fInfraOptions\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x16\n" +
	"\x06module\x18\x03 \x01(\tR\x06module\"\xfe\x01\n" +
	"\x14DockerProjectOptions\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x18\n" +
	"\acontext\x18\x02 \x01(\tR\acontext\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12\x16\n" +
	"\x06target\x18\x04 \x01(\tR\x06target\x12\x1a\n" +
	"\bregistry\x18\x05 \x01(\tR\bregistry\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\x12\x10\n" +
	"\x03tag\x18\a \x01(\tR\x03tag\x12!\n" +
	"\fremote_build\x18\b \x01(\bR\vremoteBuild\x12\x1d\n" +
	"\n" +
	"build_args\x18\t \x03(\tR\tbuildArgs\"\xe6\x01\n" +
	"\x0eServiceContext\x12*\n" +
	"\arestore\x18\x01 \x03(\v2\x10.azdext.ArtifactR\arestore\x12&\n" +
	"\x05build\x18\x02 \x03(\v2\x10.azdext.ArtifactR\x05build\x12*\n" +
	"\apackage\x18\x03 \x03(\v2\x10.azdext.ArtifactR\apackage\x12*\n" +
	"\apublish\x18\x04 \x03(\v2\x10.azdext.ArtifactR\apublish\x12(\n" +
	"\x06deploy\x18\x05 \x03(\v2\x10.azdext.ArtifactR\x06deploy\">\n" +
	"\fArtifactList\x12.\n" +
	"\tartifacts\x18\x01 \x03(\v2\x10.azdext.ArtifactR\tartifacts\"\x84\x02\n" +
	"\bArtifact\x12(\n" +
	"\x04kind\x18\x01 \x01(\x0e2\x14.azdext.ArtifactKindR\x04kind\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x129\n" +
	"\rlocation_kind\x18\x03 \x01(\x0e2\x14.azdext.LocationKindR\flocationKind\x12:\n" +
	"\bmetadata\x18\x04 \x03(\v2\x1e.azdext.Artifact.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xf2\x01\n" +
	"\fArtifactKind\x12\x1d\n" +
	"\x19ARTIFACT_KIND_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17ARTIFACT_KIND_DIRECTORY\x10\x01\x12\x18\n" +
	"\x14ARTIFACT_KIND_CONFIG\x10\x02\x12\x19\n" +
	"\x15ARTIFACT_KIND_ARCHIVE\x10\x03\x12\x1b\n" +
	"\x17ARTIFACT_KIND_CONTAINER\x10\x04\x12\x1a\n" +
	"\x16ARTIFACT_KIND_ENDPOINT\x10\x05\x12\x1c\n" +
	"\x18ARTIFACT_KIND_DEPLOYMENT\x10\x06\x12\x1a\n" +
	"\x16ARTIFACT_KIND_RESOURCE\x10\a*`\n" +
	"\fLocationKind\x12\x1d\n" +
	"\x19LOCATION_KIND_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13LOCATION_KIND_LOCAL\x10\x01\x12\x18\n" +
	"\x14LOCATION_KIND_REMOTE\x10\x02B6Z4github.com/azure/azure-dev/cli/azd/pkg/azdext;azdextb\x06proto3"

var (
	file_models_proto_rawDescOnce sync.Once
	file_models_proto_rawDescData []byte
)

func file_models_proto_rawDescGZIP() []byte {
	file_models_proto_rawDescOnce.Do(func() {
		file_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_models_proto_rawDesc), len(file_models_proto_rawDesc)))
	})
	return file_models_proto_rawDescData
}

var file_models_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_models_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_models_proto_goTypes = []any{
	(ArtifactKind)(0),            // 0: azdext.ArtifactKind
	(LocationKind)(0),            // 1: azdext.LocationKind
	(*EmptyRequest)(nil),         // 2: azdext.EmptyRequest
	(*EmptyResponse)(nil),        // 3: azdext.EmptyResponse
	(*Subscription)(nil),         // 4: azdext.Subscription
	(*ResourceGroup)(nil),        // 5: azdext.ResourceGroup
	(*Location)(nil),             // 6: azdext.Location
	(*AzureScope)(nil),           // 7: azdext.AzureScope
	(*AzureContext)(nil),         // 8: azdext.AzureContext
	(*Resource)(nil),             // 9: azdext.Resource
	(*ResourceExtended)(nil),     // 10: azdext.ResourceExtended
	(*ProjectConfig)(nil),        // 11: azdext.ProjectConfig
	(*RequiredVersions)(nil),     // 12: azdext.RequiredVersions
	(*ProjectMetadata)(nil),      // 13: azdext.ProjectMetadata
	(*ServiceConfig)(nil),        // 14: azdext.ServiceConfig
	(*InfraOptions)(nil),         // 15: azdext.InfraOptions
	(*DockerProjectOptions)(nil), // 16: azdext.DockerProjectOptions
	(*ServiceContext)(nil),       // 17: azdext.ServiceContext
	(*ArtifactList)(nil),         // 18: azdext.ArtifactList
	(*Artifact)(nil),             // 19: azdext.Artifact
	nil,                          // 20: azdext.ProjectConfig.ServicesEntry
	nil,                          // 21: azdext.Artifact.MetadataEntry
	(*structpb.Struct)(nil),      // 22: google.protobuf.Struct
}
var file_models_proto_depIdxs = []int32{
	7,  // 0: azdext.AzureContext.scope:type_name -> azdext.AzureScope
	13, // 1: azdext.ProjectConfig.metadata:type_name -> azdext.ProjectMetadata
	20, // 2: azdext.ProjectConfig.services:type_name -> azdext.ProjectConfig.ServicesEntry
	15, // 3: azdext.ProjectConfig.infra:type_name -> azdext.InfraOptions
	16, // 4: azdext.ServiceConfig.docker:type_name -> azdext.DockerProjectOptions
	22, // 5: azdext.ServiceConfig.config:type_name -> google.protobuf.Struct
	19, // 6: azdext.ServiceContext.restore:type_name -> azdext.Artifact
	19, // 7: azdext.ServiceContext.build:type_name -> azdext.Artifact
	19, // 8: azdext.ServiceContext.package:type_name -> azdext.Artifact
	19, // 9: azdext.ServiceContext.publish:type_name -> azdext.Artifact
	19, // 10: azdext.ServiceContext.deploy:type_name -> azdext.Artifact
	19, // 11: azdext.ArtifactList.artifacts:type_name -> azdext.Artifact
	0,  // 12: azdext.Artifact.kind:type_name -> azdext.ArtifactKind
	1,  // 13: azdext.Artifact.location_kind:type_name -> azdext.LocationKind
	21, // 14: azdext.Artifact.metadata:type_name -> azdext.Artifact.MetadataEntry
	14, // 15: azdext.ProjectConfig.ServicesEntry.value:type_name -> azdext.ServiceConfig
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_models_proto_init() }
func file_models_proto_init() {
	if File_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_models_proto_rawDesc), len(file_models_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_proto_goTypes,
		DependencyIndexes: file_models_proto_depIdxs,
		EnumInfos:         file_models_proto_enumTypes,
		MessageInfos:      file_models_proto_msgTypes,
	}.Build()
	File_models_proto = out.File
	file_models_proto_goTypes = nil
	file_models_proto_depIdxs = nil
}
