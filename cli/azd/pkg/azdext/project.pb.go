// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: project.proto

package azdext

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetProjectResponse message definition
type GetProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *ProjectConfig         `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectResponse) Reset() {
	*x = GetProjectResponse{}
	mi := &file_project_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResponse) ProtoMessage() {}

func (x *GetProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResponse.ProtoReflect.Descriptor instead.
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{0}
}

func (x *GetProjectResponse) GetProject() *ProjectConfig {
	if x != nil {
		return x.Project
	}
	return nil
}

// AddServiceRequest message definition
type AddServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *ServiceConfig         `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServiceRequest) Reset() {
	*x = AddServiceRequest{}
	mi := &file_project_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServiceRequest) ProtoMessage() {}

func (x *AddServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServiceRequest.ProtoReflect.Descriptor instead.
func (*AddServiceRequest) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{1}
}

func (x *AddServiceRequest) GetService() *ServiceConfig {
	if x != nil {
		return x.Service
	}
	return nil
}

var File_project_proto protoreflect.FileDescriptor

const file_project_proto_rawDesc = "" +
	"\n" +
	"\rproject.proto\x12\x06azdext\x1a\fmodels.proto\"E\n" +
	"\x12GetProjectResponse\x12/\n" +
	"\aproject\x18\x01 \x01(\v2\x15.azdext.ProjectConfigR\aproject\"D\n" +
	"\x11AddServiceRequest\x12/\n" +
	"\aservice\x18\x01 \x01(\v2\x15.azdext.ServiceConfigR\aservice2\x89\x01\n" +
	"\x0eProjectService\x127\n" +
	"\x03Get\x12\x14.azdext.EmptyRequest\x1a\x1a.azdext.GetProjectResponse\x12>\n" +
	"\n" +
	"AddService\x12\x19.azdext.AddServiceRequest\x1a\x15.azdext.EmptyResponseB6Z4github.com/azure/azure-dev/cli/azd/pkg/azdext;azdextb\x06proto3"

var (
	file_project_proto_rawDescOnce sync.Once
	file_project_proto_rawDescData []byte
)

func file_project_proto_rawDescGZIP() []byte {
	file_project_proto_rawDescOnce.Do(func() {
		file_project_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_proto_rawDesc), len(file_project_proto_rawDesc)))
	})
	return file_project_proto_rawDescData
}

var file_project_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_proto_goTypes = []any{
	(*GetProjectResponse)(nil), // 0: azdext.GetProjectResponse
	(*AddServiceRequest)(nil),  // 1: azdext.AddServiceRequest
	(*ProjectConfig)(nil),      // 2: azdext.ProjectConfig
	(*ServiceConfig)(nil),      // 3: azdext.ServiceConfig
	(*EmptyRequest)(nil),       // 4: azdext.EmptyRequest
	(*EmptyResponse)(nil),      // 5: azdext.EmptyResponse
}
var file_project_proto_depIdxs = []int32{
	2, // 0: azdext.GetProjectResponse.project:type_name -> azdext.ProjectConfig
	3, // 1: azdext.AddServiceRequest.service:type_name -> azdext.ServiceConfig
	4, // 2: azdext.ProjectService.Get:input_type -> azdext.EmptyRequest
	1, // 3: azdext.ProjectService.AddService:input_type -> azdext.AddServiceRequest
	0, // 4: azdext.ProjectService.Get:output_type -> azdext.GetProjectResponse
	5, // 5: azdext.ProjectService.AddService:output_type -> azdext.EmptyResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_project_proto_init() }
func file_project_proto_init() {
	if File_project_proto != nil {
		return
	}
	file_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_proto_rawDesc), len(file_project_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_proto_goTypes,
		DependencyIndexes: file_project_proto_depIdxs,
		MessageInfos:      file_project_proto_msgTypes,
	}.Build()
	File_project_proto = out.File
	file_project_proto_goTypes = nil
	file_project_proto_depIdxs = nil
}
