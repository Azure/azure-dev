// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: prompt.proto

package azdext

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PromptSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PromptSubscriptionRequest) Reset() {
	*x = PromptSubscriptionRequest{}
	mi := &file_prompt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptSubscriptionRequest) ProtoMessage() {}

func (x *PromptSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*PromptSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{0}
}

type PromptSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *PromptSubscriptionResponse) Reset() {
	*x = PromptSubscriptionResponse{}
	mi := &file_prompt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptSubscriptionResponse) ProtoMessage() {}

func (x *PromptSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*PromptSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{1}
}

func (x *PromptSubscriptionResponse) GetSubscription() *Subscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type PromptLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureContext *AzureContext `protobuf:"bytes,1,opt,name=azure_context,json=azureContext,proto3" json:"azure_context,omitempty"`
}

func (x *PromptLocationRequest) Reset() {
	*x = PromptLocationRequest{}
	mi := &file_prompt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptLocationRequest) ProtoMessage() {}

func (x *PromptLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptLocationRequest.ProtoReflect.Descriptor instead.
func (*PromptLocationRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{2}
}

func (x *PromptLocationRequest) GetAzureContext() *AzureContext {
	if x != nil {
		return x.AzureContext
	}
	return nil
}

type PromptLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *PromptLocationResponse) Reset() {
	*x = PromptLocationResponse{}
	mi := &file_prompt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptLocationResponse) ProtoMessage() {}

func (x *PromptLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptLocationResponse.ProtoReflect.Descriptor instead.
func (*PromptLocationResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{3}
}

func (x *PromptLocationResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type PromptResourceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureContext *AzureContext `protobuf:"bytes,1,opt,name=azure_context,json=azureContext,proto3" json:"azure_context,omitempty"`
}

func (x *PromptResourceGroupRequest) Reset() {
	*x = PromptResourceGroupRequest{}
	mi := &file_prompt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResourceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResourceGroupRequest) ProtoMessage() {}

func (x *PromptResourceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResourceGroupRequest.ProtoReflect.Descriptor instead.
func (*PromptResourceGroupRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{4}
}

func (x *PromptResourceGroupRequest) GetAzureContext() *AzureContext {
	if x != nil {
		return x.AzureContext
	}
	return nil
}

type PromptResourceGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceGroup *ResourceGroup `protobuf:"bytes,1,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
}

func (x *PromptResourceGroupResponse) Reset() {
	*x = PromptResourceGroupResponse{}
	mi := &file_prompt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResourceGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResourceGroupResponse) ProtoMessage() {}

func (x *PromptResourceGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResourceGroupResponse.ProtoReflect.Descriptor instead.
func (*PromptResourceGroupResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{5}
}

func (x *PromptResourceGroupResponse) GetResourceGroup() *ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

type ConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *ConfirmOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ConfirmRequest) Reset() {
	*x = ConfirmRequest{}
	mi := &file_prompt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmRequest) ProtoMessage() {}

func (x *ConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmRequest.ProtoReflect.Descriptor instead.
func (*ConfirmRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{6}
}

func (x *ConfirmRequest) GetOptions() *ConfirmOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *ConfirmResponse) Reset() {
	*x = ConfirmResponse{}
	mi := &file_prompt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResponse) ProtoMessage() {}

func (x *ConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResponse.ProtoReflect.Descriptor instead.
func (*ConfirmResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{7}
}

func (x *ConfirmResponse) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type PromptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *PromptOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *PromptRequest) Reset() {
	*x = PromptRequest{}
	mi := &file_prompt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptRequest) ProtoMessage() {}

func (x *PromptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptRequest.ProtoReflect.Descriptor instead.
func (*PromptRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{8}
}

func (x *PromptRequest) GetOptions() *PromptOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type PromptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PromptResponse) Reset() {
	*x = PromptResponse{}
	mi := &file_prompt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResponse) ProtoMessage() {}

func (x *PromptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResponse.ProtoReflect.Descriptor instead.
func (*PromptResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{9}
}

func (x *PromptResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SelectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SelectOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *SelectRequest) Reset() {
	*x = SelectRequest{}
	mi := &file_prompt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectRequest) ProtoMessage() {}

func (x *SelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectRequest.ProtoReflect.Descriptor instead.
func (*SelectRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{10}
}

func (x *SelectRequest) GetOptions() *SelectOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type SelectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int32 `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *SelectResponse) Reset() {
	*x = SelectResponse{}
	mi := &file_prompt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectResponse) ProtoMessage() {}

func (x *SelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectResponse.ProtoReflect.Descriptor instead.
func (*SelectResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{11}
}

func (x *SelectResponse) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type PromptSubscriptionResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureContext *AzureContext          `protobuf:"bytes,1,opt,name=azure_context,json=azureContext,proto3" json:"azure_context,omitempty"`
	Options      *PromptResourceOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *PromptSubscriptionResourceRequest) Reset() {
	*x = PromptSubscriptionResourceRequest{}
	mi := &file_prompt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptSubscriptionResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptSubscriptionResourceRequest) ProtoMessage() {}

func (x *PromptSubscriptionResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptSubscriptionResourceRequest.ProtoReflect.Descriptor instead.
func (*PromptSubscriptionResourceRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{12}
}

func (x *PromptSubscriptionResourceRequest) GetAzureContext() *AzureContext {
	if x != nil {
		return x.AzureContext
	}
	return nil
}

func (x *PromptSubscriptionResourceRequest) GetOptions() *PromptResourceOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type PromptSubscriptionResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *ResourceExtended `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *PromptSubscriptionResourceResponse) Reset() {
	*x = PromptSubscriptionResourceResponse{}
	mi := &file_prompt_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptSubscriptionResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptSubscriptionResourceResponse) ProtoMessage() {}

func (x *PromptSubscriptionResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptSubscriptionResourceResponse.ProtoReflect.Descriptor instead.
func (*PromptSubscriptionResourceResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{13}
}

func (x *PromptSubscriptionResourceResponse) GetResource() *ResourceExtended {
	if x != nil {
		return x.Resource
	}
	return nil
}

type PromptResourceGroupResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureContext *AzureContext          `protobuf:"bytes,1,opt,name=azure_context,json=azureContext,proto3" json:"azure_context,omitempty"`
	Options      *PromptResourceOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *PromptResourceGroupResourceRequest) Reset() {
	*x = PromptResourceGroupResourceRequest{}
	mi := &file_prompt_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResourceGroupResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResourceGroupResourceRequest) ProtoMessage() {}

func (x *PromptResourceGroupResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResourceGroupResourceRequest.ProtoReflect.Descriptor instead.
func (*PromptResourceGroupResourceRequest) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{14}
}

func (x *PromptResourceGroupResourceRequest) GetAzureContext() *AzureContext {
	if x != nil {
		return x.AzureContext
	}
	return nil
}

func (x *PromptResourceGroupResourceRequest) GetOptions() *PromptResourceOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type PromptResourceGroupResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *ResourceExtended `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *PromptResourceGroupResourceResponse) Reset() {
	*x = PromptResourceGroupResourceResponse{}
	mi := &file_prompt_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResourceGroupResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResourceGroupResourceResponse) ProtoMessage() {}

func (x *PromptResourceGroupResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResourceGroupResourceResponse.ProtoReflect.Descriptor instead.
func (*PromptResourceGroupResourceResponse) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{15}
}

func (x *PromptResourceGroupResourceResponse) GetResource() *ResourceExtended {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ConfirmOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue *bool  `protobuf:"varint,1,opt,name=default_value,json=defaultValue,proto3,oneof" json:"default_value,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	HelpMessage  string `protobuf:"bytes,3,opt,name=help_message,json=helpMessage,proto3" json:"help_message,omitempty"`
	Hint         string `protobuf:"bytes,4,opt,name=hint,proto3" json:"hint,omitempty"`
	Placeholder  string `protobuf:"bytes,5,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
}

func (x *ConfirmOptions) Reset() {
	*x = ConfirmOptions{}
	mi := &file_prompt_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmOptions) ProtoMessage() {}

func (x *ConfirmOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmOptions.ProtoReflect.Descriptor instead.
func (*ConfirmOptions) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{16}
}

func (x *ConfirmOptions) GetDefaultValue() bool {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return false
}

func (x *ConfirmOptions) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfirmOptions) GetHelpMessage() string {
	if x != nil {
		return x.HelpMessage
	}
	return ""
}

func (x *ConfirmOptions) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *ConfirmOptions) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

type PromptOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message           string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	HelpMessage       string `protobuf:"bytes,2,opt,name=help_message,json=helpMessage,proto3" json:"help_message,omitempty"`
	Hint              string `protobuf:"bytes,3,opt,name=hint,proto3" json:"hint,omitempty"`
	Placeholder       string `protobuf:"bytes,4,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	ValidationMessage string `protobuf:"bytes,5,opt,name=validation_message,json=validationMessage,proto3" json:"validation_message,omitempty"`
	RequiredMessage   string `protobuf:"bytes,6,opt,name=required_message,json=requiredMessage,proto3" json:"required_message,omitempty"`
	Required          bool   `protobuf:"varint,7,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue      string `protobuf:"bytes,8,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	ClearOnCompletion bool   `protobuf:"varint,9,opt,name=clear_on_completion,json=clearOnCompletion,proto3" json:"clear_on_completion,omitempty"`
	IgnoreHintKeys    bool   `protobuf:"varint,10,opt,name=ignore_hint_keys,json=ignoreHintKeys,proto3" json:"ignore_hint_keys,omitempty"`
}

func (x *PromptOptions) Reset() {
	*x = PromptOptions{}
	mi := &file_prompt_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptOptions) ProtoMessage() {}

func (x *PromptOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptOptions.ProtoReflect.Descriptor instead.
func (*PromptOptions) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{17}
}

func (x *PromptOptions) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PromptOptions) GetHelpMessage() string {
	if x != nil {
		return x.HelpMessage
	}
	return ""
}

func (x *PromptOptions) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *PromptOptions) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *PromptOptions) GetValidationMessage() string {
	if x != nil {
		return x.ValidationMessage
	}
	return ""
}

func (x *PromptOptions) GetRequiredMessage() string {
	if x != nil {
		return x.RequiredMessage
	}
	return ""
}

func (x *PromptOptions) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *PromptOptions) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *PromptOptions) GetClearOnCompletion() bool {
	if x != nil {
		return x.ClearOnCompletion
	}
	return false
}

func (x *PromptOptions) GetIgnoreHintKeys() bool {
	if x != nil {
		return x.IgnoreHintKeys
	}
	return false
}

type SelectChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *SelectChoice) Reset() {
	*x = SelectChoice{}
	mi := &file_prompt_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectChoice) ProtoMessage() {}

func (x *SelectChoice) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectChoice.ProtoReflect.Descriptor instead.
func (*SelectChoice) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{18}
}

func (x *SelectChoice) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SelectChoice) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type SelectOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedIndex   *int32          `protobuf:"varint,1,opt,name=selected_index,json=selectedIndex,proto3,oneof" json:"selected_index,omitempty"`
	Message         string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Choices         []*SelectChoice `protobuf:"bytes,3,rep,name=choices,proto3" json:"choices,omitempty"`
	HelpMessage     string          `protobuf:"bytes,4,opt,name=help_message,json=helpMessage,proto3" json:"help_message,omitempty"`
	Hint            string          `protobuf:"bytes,5,opt,name=hint,proto3" json:"hint,omitempty"`
	DisplayCount    int32           `protobuf:"varint,6,opt,name=display_count,json=displayCount,proto3" json:"display_count,omitempty"`
	DisplayNumbers  *bool           `protobuf:"varint,7,opt,name=display_numbers,json=displayNumbers,proto3,oneof" json:"display_numbers,omitempty"`
	EnableFiltering *bool           `protobuf:"varint,8,opt,name=enable_filtering,json=enableFiltering,proto3,oneof" json:"enable_filtering,omitempty"`
}

func (x *SelectOptions) Reset() {
	*x = SelectOptions{}
	mi := &file_prompt_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectOptions) ProtoMessage() {}

func (x *SelectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectOptions.ProtoReflect.Descriptor instead.
func (*SelectOptions) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{19}
}

func (x *SelectOptions) GetSelectedIndex() int32 {
	if x != nil && x.SelectedIndex != nil {
		return *x.SelectedIndex
	}
	return 0
}

func (x *SelectOptions) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SelectOptions) GetChoices() []*SelectChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *SelectOptions) GetHelpMessage() string {
	if x != nil {
		return x.HelpMessage
	}
	return ""
}

func (x *SelectOptions) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *SelectOptions) GetDisplayCount() int32 {
	if x != nil {
		return x.DisplayCount
	}
	return 0
}

func (x *SelectOptions) GetDisplayNumbers() bool {
	if x != nil && x.DisplayNumbers != nil {
		return *x.DisplayNumbers
	}
	return false
}

func (x *SelectOptions) GetEnableFiltering() bool {
	if x != nil && x.EnableFiltering != nil {
		return *x.EnableFiltering
	}
	return false
}

type PromptResourceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType            string                       `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Kinds                   []string                     `protobuf:"bytes,2,rep,name=kinds,proto3" json:"kinds,omitempty"`
	ResourceTypeDisplayName string                       `protobuf:"bytes,3,opt,name=resource_type_display_name,json=resourceTypeDisplayName,proto3" json:"resource_type_display_name,omitempty"`
	SelectOptions           *PromptResourceSelectOptions `protobuf:"bytes,4,opt,name=select_options,json=selectOptions,proto3" json:"select_options,omitempty"`
}

func (x *PromptResourceOptions) Reset() {
	*x = PromptResourceOptions{}
	mi := &file_prompt_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResourceOptions) ProtoMessage() {}

func (x *PromptResourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResourceOptions.ProtoReflect.Descriptor instead.
func (*PromptResourceOptions) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{20}
}

func (x *PromptResourceOptions) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *PromptResourceOptions) GetKinds() []string {
	if x != nil {
		return x.Kinds
	}
	return nil
}

func (x *PromptResourceOptions) GetResourceTypeDisplayName() string {
	if x != nil {
		return x.ResourceTypeDisplayName
	}
	return ""
}

func (x *PromptResourceOptions) GetSelectOptions() *PromptResourceSelectOptions {
	if x != nil {
		return x.SelectOptions
	}
	return nil
}

type PromptResourceSelectOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceNewResource   *bool  `protobuf:"varint,1,opt,name=force_new_resource,json=forceNewResource,proto3,oneof" json:"force_new_resource,omitempty"`
	AllowNewResource   *bool  `protobuf:"varint,2,opt,name=allow_new_resource,json=allowNewResource,proto3,oneof" json:"allow_new_resource,omitempty"`
	NewResourceMessage string `protobuf:"bytes,3,opt,name=new_resource_message,json=newResourceMessage,proto3" json:"new_resource_message,omitempty"`
	CreatingMessage    string `protobuf:"bytes,4,opt,name=creating_message,json=creatingMessage,proto3" json:"creating_message,omitempty"`
	Message            string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	HelpMessage        string `protobuf:"bytes,6,opt,name=help_message,json=helpMessage,proto3" json:"help_message,omitempty"`
	LoadingMessage     string `protobuf:"bytes,7,opt,name=loading_message,json=loadingMessage,proto3" json:"loading_message,omitempty"`
	DisplayNumbers     *bool  `protobuf:"varint,8,opt,name=display_numbers,json=displayNumbers,proto3,oneof" json:"display_numbers,omitempty"`
	DisplayCount       int32  `protobuf:"varint,9,opt,name=display_count,json=displayCount,proto3" json:"display_count,omitempty"`
}

func (x *PromptResourceSelectOptions) Reset() {
	*x = PromptResourceSelectOptions{}
	mi := &file_prompt_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptResourceSelectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptResourceSelectOptions) ProtoMessage() {}

func (x *PromptResourceSelectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_prompt_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptResourceSelectOptions.ProtoReflect.Descriptor instead.
func (*PromptResourceSelectOptions) Descriptor() ([]byte, []int) {
	return file_prompt_proto_rawDescGZIP(), []int{21}
}

func (x *PromptResourceSelectOptions) GetForceNewResource() bool {
	if x != nil && x.ForceNewResource != nil {
		return *x.ForceNewResource
	}
	return false
}

func (x *PromptResourceSelectOptions) GetAllowNewResource() bool {
	if x != nil && x.AllowNewResource != nil {
		return *x.AllowNewResource
	}
	return false
}

func (x *PromptResourceSelectOptions) GetNewResourceMessage() string {
	if x != nil {
		return x.NewResourceMessage
	}
	return ""
}

func (x *PromptResourceSelectOptions) GetCreatingMessage() string {
	if x != nil {
		return x.CreatingMessage
	}
	return ""
}

func (x *PromptResourceSelectOptions) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PromptResourceSelectOptions) GetHelpMessage() string {
	if x != nil {
		return x.HelpMessage
	}
	return ""
}

func (x *PromptResourceSelectOptions) GetLoadingMessage() string {
	if x != nil {
		return x.LoadingMessage
	}
	return ""
}

func (x *PromptResourceSelectOptions) GetDisplayNumbers() bool {
	if x != nil && x.DisplayNumbers != nil {
		return *x.DisplayNumbers
	}
	return false
}

func (x *PromptResourceSelectOptions) GetDisplayCount() int32 {
	if x != nil {
		return x.DisplayCount
	}
	return 0
}

var File_prompt_proto protoreflect.FileDescriptor

var file_prompt_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x1a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x56, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x7a, 0x64, 0x65,
	0x78, 0x74, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0c, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x46, 0x0a,
	0x16, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x7a, 0x64, 0x65,
	0x78, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x7a, 0x64,
	0x65, 0x78, 0x74, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x0c, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5b,
	0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x42, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x36, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x7a, 0x64, 0x65,
	0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x40, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x21, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74,
	0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x98, 0x01, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x23, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x65, 0x6c, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf7, 0x02, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x65,
	0x6c, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x4f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0xfb, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x7a, 0x64, 0x65,
	0x78, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x70,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x68, 0x65, 0x6c, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xdb,
	0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x69,
	0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x4a, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xdb, 0x03, 0x0a,
	0x1b, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x12,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x10, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65, 0x6c,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x68, 0x65, 0x6c, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02,
	0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x32, 0xb8, 0x05, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x61, 0x7a,
	0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x7a, 0x64,
	0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x22, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x15, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x7a, 0x64, 0x65,
	0x78, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a,
	0x1b, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x61,
	0x7a, 0x64, 0x65, 0x78, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x7a, 0x64, 0x65, 0x78,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2d,
	0x64, 0x65, 0x76, 0x2f, 0x63, 0x6c, 0x69, 0x2f, 0x61, 0x7a, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x61, 0x7a, 0x64, 0x65, 0x78, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x3b, 0x61, 0x7a, 0x64, 0x65, 0x78,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prompt_proto_rawDescOnce sync.Once
	file_prompt_proto_rawDescData = file_prompt_proto_rawDesc
)

func file_prompt_proto_rawDescGZIP() []byte {
	file_prompt_proto_rawDescOnce.Do(func() {
		file_prompt_proto_rawDescData = protoimpl.X.CompressGZIP(file_prompt_proto_rawDescData)
	})
	return file_prompt_proto_rawDescData
}

var file_prompt_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_prompt_proto_goTypes = []any{
	(*PromptSubscriptionRequest)(nil),           // 0: azdext.PromptSubscriptionRequest
	(*PromptSubscriptionResponse)(nil),          // 1: azdext.PromptSubscriptionResponse
	(*PromptLocationRequest)(nil),               // 2: azdext.PromptLocationRequest
	(*PromptLocationResponse)(nil),              // 3: azdext.PromptLocationResponse
	(*PromptResourceGroupRequest)(nil),          // 4: azdext.PromptResourceGroupRequest
	(*PromptResourceGroupResponse)(nil),         // 5: azdext.PromptResourceGroupResponse
	(*ConfirmRequest)(nil),                      // 6: azdext.ConfirmRequest
	(*ConfirmResponse)(nil),                     // 7: azdext.ConfirmResponse
	(*PromptRequest)(nil),                       // 8: azdext.PromptRequest
	(*PromptResponse)(nil),                      // 9: azdext.PromptResponse
	(*SelectRequest)(nil),                       // 10: azdext.SelectRequest
	(*SelectResponse)(nil),                      // 11: azdext.SelectResponse
	(*PromptSubscriptionResourceRequest)(nil),   // 12: azdext.PromptSubscriptionResourceRequest
	(*PromptSubscriptionResourceResponse)(nil),  // 13: azdext.PromptSubscriptionResourceResponse
	(*PromptResourceGroupResourceRequest)(nil),  // 14: azdext.PromptResourceGroupResourceRequest
	(*PromptResourceGroupResourceResponse)(nil), // 15: azdext.PromptResourceGroupResourceResponse
	(*ConfirmOptions)(nil),                      // 16: azdext.ConfirmOptions
	(*PromptOptions)(nil),                       // 17: azdext.PromptOptions
	(*SelectChoice)(nil),                        // 18: azdext.SelectChoice
	(*SelectOptions)(nil),                       // 19: azdext.SelectOptions
	(*PromptResourceOptions)(nil),               // 20: azdext.PromptResourceOptions
	(*PromptResourceSelectOptions)(nil),         // 21: azdext.PromptResourceSelectOptions
	(*Subscription)(nil),                        // 22: azdext.Subscription
	(*AzureContext)(nil),                        // 23: azdext.AzureContext
	(*Location)(nil),                            // 24: azdext.Location
	(*ResourceGroup)(nil),                       // 25: azdext.ResourceGroup
	(*ResourceExtended)(nil),                    // 26: azdext.ResourceExtended
}
var file_prompt_proto_depIdxs = []int32{
	22, // 0: azdext.PromptSubscriptionResponse.subscription:type_name -> azdext.Subscription
	23, // 1: azdext.PromptLocationRequest.azure_context:type_name -> azdext.AzureContext
	24, // 2: azdext.PromptLocationResponse.location:type_name -> azdext.Location
	23, // 3: azdext.PromptResourceGroupRequest.azure_context:type_name -> azdext.AzureContext
	25, // 4: azdext.PromptResourceGroupResponse.resource_group:type_name -> azdext.ResourceGroup
	16, // 5: azdext.ConfirmRequest.options:type_name -> azdext.ConfirmOptions
	17, // 6: azdext.PromptRequest.options:type_name -> azdext.PromptOptions
	19, // 7: azdext.SelectRequest.options:type_name -> azdext.SelectOptions
	23, // 8: azdext.PromptSubscriptionResourceRequest.azure_context:type_name -> azdext.AzureContext
	20, // 9: azdext.PromptSubscriptionResourceRequest.options:type_name -> azdext.PromptResourceOptions
	26, // 10: azdext.PromptSubscriptionResourceResponse.resource:type_name -> azdext.ResourceExtended
	23, // 11: azdext.PromptResourceGroupResourceRequest.azure_context:type_name -> azdext.AzureContext
	20, // 12: azdext.PromptResourceGroupResourceRequest.options:type_name -> azdext.PromptResourceOptions
	26, // 13: azdext.PromptResourceGroupResourceResponse.resource:type_name -> azdext.ResourceExtended
	18, // 14: azdext.SelectOptions.choices:type_name -> azdext.SelectChoice
	21, // 15: azdext.PromptResourceOptions.select_options:type_name -> azdext.PromptResourceSelectOptions
	0,  // 16: azdext.PromptService.PromptSubscription:input_type -> azdext.PromptSubscriptionRequest
	2,  // 17: azdext.PromptService.PromptLocation:input_type -> azdext.PromptLocationRequest
	4,  // 18: azdext.PromptService.PromptResourceGroup:input_type -> azdext.PromptResourceGroupRequest
	6,  // 19: azdext.PromptService.Confirm:input_type -> azdext.ConfirmRequest
	8,  // 20: azdext.PromptService.Prompt:input_type -> azdext.PromptRequest
	10, // 21: azdext.PromptService.Select:input_type -> azdext.SelectRequest
	12, // 22: azdext.PromptService.PromptSubscriptionResource:input_type -> azdext.PromptSubscriptionResourceRequest
	14, // 23: azdext.PromptService.PromptResourceGroupResource:input_type -> azdext.PromptResourceGroupResourceRequest
	1,  // 24: azdext.PromptService.PromptSubscription:output_type -> azdext.PromptSubscriptionResponse
	3,  // 25: azdext.PromptService.PromptLocation:output_type -> azdext.PromptLocationResponse
	5,  // 26: azdext.PromptService.PromptResourceGroup:output_type -> azdext.PromptResourceGroupResponse
	7,  // 27: azdext.PromptService.Confirm:output_type -> azdext.ConfirmResponse
	9,  // 28: azdext.PromptService.Prompt:output_type -> azdext.PromptResponse
	11, // 29: azdext.PromptService.Select:output_type -> azdext.SelectResponse
	13, // 30: azdext.PromptService.PromptSubscriptionResource:output_type -> azdext.PromptSubscriptionResourceResponse
	15, // 31: azdext.PromptService.PromptResourceGroupResource:output_type -> azdext.PromptResourceGroupResourceResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_prompt_proto_init() }
func file_prompt_proto_init() {
	if File_prompt_proto != nil {
		return
	}
	file_models_proto_init()
	file_prompt_proto_msgTypes[7].OneofWrappers = []any{}
	file_prompt_proto_msgTypes[11].OneofWrappers = []any{}
	file_prompt_proto_msgTypes[16].OneofWrappers = []any{}
	file_prompt_proto_msgTypes[19].OneofWrappers = []any{}
	file_prompt_proto_msgTypes[21].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prompt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prompt_proto_goTypes,
		DependencyIndexes: file_prompt_proto_depIdxs,
		MessageInfos:      file_prompt_proto_msgTypes,
	}.Build()
	File_prompt_proto = out.File
	file_prompt_proto_rawDesc = nil
	file_prompt_proto_goTypes = nil
	file_prompt_proto_depIdxs = nil
}
