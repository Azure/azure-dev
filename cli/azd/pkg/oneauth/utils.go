// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

package oneauth

import (
	"bytes"
	"crypto/sha256"
	"encoding/hex"
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

// cmakeChecksumToBytes converts a checksum generated by "cmake -E sha256sum" to bytes
func cmakeChecksumToBytes(checksum []byte) ([]byte, error) {
	hexString, _, found := strings.Cut(string(checksum), " ")
	if !found {
		return nil, fmt.Errorf("malformed checksum %q", checksum)
	}
	return hex.DecodeString(hexString)
}

// writeDynamicLib writes data to path if path doesn't exist or its content doesn't match checksum
// (which is a SHA256 digest). The checksum is essentially a file version used to avoid unnecessary
// writes.
func writeDynamicLib(path string, data, checksum []byte) error {
	if b, err := os.ReadFile(path); err == nil {
		if actual := sha256.Sum256(b); bytes.Equal(actual[:], checksum) {
			return nil
		}
	}
	err := os.MkdirAll(filepath.Dir(path), 0700)
	if err == nil {
		err = os.WriteFile(path, data, 0600)
	}
	return err
}
