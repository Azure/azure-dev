{{define "containerApp.tmpl.yaml" -}}
api-version: 2024-02-02-preview
location: {{ "{{ .Env.AZURE_LOCATION }}" }}
identity:
  type: UserAssigned
  userAssignedIdentities:
    ? {{ `"{{ .Env.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}"` }}
    : {}
properties:
  environmentId: {{ "{{ .Env.AZURE_CONTAINER_APPS_ENVIRONMENT_ID }}" }}
  configuration:
    activeRevisionsMode: single
    runtime:
      dotnet:
        autoConfigureDataProtection: true
{{- if .Dapr}}
    dapr:
      appId: {{ .Dapr.AppId }}
{{- if .Dapr.AppPort}}
      appPort: {{ .Dapr.AppPort }}
{{- end}}
{{- if .Dapr.AppProtocol}}
      appProtocol: {{ .Dapr.AppProtocol }}
{{- end}}
{{- if .Dapr.EnableApiLogging}}
      enableApiLogging: {{ .Dapr.EnableApiLogging }}
{{- end}}
      enabled: true
{{- if .Dapr.HttpMaxRequestSize}}
      httpMaxRequestSize: {{ .Dapr.HttpMaxRequestSize }}
{{- end}}
{{- if .Dapr.HttpReadBufferSize}}
      httpReadBufferSize: {{ .Dapr.HttpReadBufferSize }}
{{- end}}
{{- if .Dapr.LogLevel}}
      logLevel: {{ .Dapr.LogLevel }}
{{- end}}
{{- end}}
{{- if .Ingress}}
    ingress:
{{- if .Ingress.AdditionalPortMappings }}
      additionalPortMappings:
{{- range $additionalPort := .Ingress.AdditionalPortMappings }}
        - targetPort: {{ $additionalPort.TargetPort }}
          external: {{ $additionalPort.External }}
{{- end}}
{{- end}}
      external: {{ .Ingress.External }}
      targetPort: {{ .TargetPortExpression }}
{{- if gt .Ingress.ExposedPort 0 }}
      exposedPort: {{ .Ingress.ExposedPort }}
{{- end}}
      transport: {{ .Ingress.Transport }}
      allowInsecure: {{ .Ingress.AllowInsecure }}
{{- end }}
    registries:
      - server: {{ "{{ .Env.AZURE_CONTAINER_REGISTRY_ENDPOINT }}" }}
        identity: {{ "{{ .Env.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}" }}
{{- if or (gt (len .Secrets) 0) (gt (len .KeyVaultSecrets) 0) }}
    secrets:
{{- end}}
{{- range $name, $value := .Secrets}}
      - name: {{containerAppSecretName $name}}
        value: {{$value}}
{{- end}}
{{- range $name, $value := .KeyVaultSecrets}}
      - name: {{containerAppSecretName $name}}
        keyVaultUrl: {{$value}}
        identity: {{ "{{ .Env.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}" }}
{{- end}}
  template:
{{- if or (.Volumes) (.BindMounts) }}
    volumes:
{{- range $volume := .Volumes }}
      - name: {{ toLower $.Name}}-{{ removeDot $volume.Name | toLower }}
        storageType: AzureFile
        storageName: {{ "{{ .Env.SERVICE_" }}{{ alphaSnakeUpper $.Name}}_VOLUME_{{ removeDot $volume.Name | alphaSnakeUpper }}{{ "_NAME }} "}}
{{- end}}
{{- range $bMount := .BindMounts}}
      - name: {{ toLower $.Name}}-{{ removeDot $bMount.Name | toLower }}
        storageType: AzureFile
        storageName: {{ "{{ .Env.SERVICE_" }}{{ alphaSnakeUpper $.Name}}_VOLUME_{{ removeDot $bMount.Name | alphaSnakeUpper }}{{ "_NAME }} "}}
{{- end}}
{{- end}}
    containers:
      - image: {{ "{{ .Image }}" }}
        name: {{ .Name }}
{{- if .Args }}
        args:
{{- range $arg := .Args}}
          - {{$arg}}
{{- end}}
{{- end}}
        env:
          - name: AZURE_CLIENT_ID
            value: {{ "{{ .Env.MANAGED_IDENTITY_CLIENT_ID }}" }}
{{- range $name, $value := .Env}}
          - name: {{$name}}
            value: {{$value}}
{{- end}}
{{- range $name, $value := .Secrets}}
          - name: {{$name}}
            secretRef: {{containerAppSecretName $name}}
{{- end}}
{{- range $name, $value := .KeyVaultSecrets}}
          - name: {{$name}}
            secretRef: {{containerAppSecretName $name}}
{{- end}}
{{- if or (.Volumes) (.BindMounts) }}
        volumeMounts:
{{- range $volume := .Volumes }}
          - volumeName: {{ toLower $.Name}}-{{ removeDot $volume.Name | toLower }}
            mountPath: {{ $volume.Target }}
{{- end}}
{{- range $bMount := .BindMounts }}
          - volumeName: {{ toLower $.Name}}-{{ removeDot $bMount.Name | toLower }}
            mountPath: {{ $bMount.Target }}
{{- end}}
{{- end}}
    scale:
      minReplicas: 1
tags:
  azd-service-name: {{ .Name }}
  aspire-resource-name: {{ .Name }}
{{ end}}