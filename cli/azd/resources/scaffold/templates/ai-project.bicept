{{define "ai-project.bicep" -}}
@description('Location for the AI Foundry project and deployments')
param aiDeploymentsLocation string

@description('Tags that will be applied to all resources')
param tags object = {}

@description('Main location for the resources')
param location string

var abbrs = loadJsonContent('./abbreviations.json')
var resourceToken = uniqueString(subscription().id, resourceGroup().id, location)

@description('The name of the environment')
param envName string

resource aiAccount 'Microsoft.CognitiveServices/accounts@2025-04-01-preview' = {
  name: 'ai-account-${resourceToken}'
  location: location
  sku: {
    name: 'S0'
  }
  kind: 'AIServices'
  identity: {
    type: 'SystemAssigned'
  }
  properties: {
    allowProjectManagement: true
    customSubDomainName: 'ai-account-${resourceToken}'
    networkAcls: {
      defaultAction: 'Allow'
      virtualNetworkRules: []
      ipRules: []
    }
    publicNetworkAccess: 'Enabled'
    disableLocalAuth: false
  }
{{ range .AiFoundryProject.Models }}
  resource {{bicepName .Name }}deployment 'deployments' = {
    name: '{{ .Name }}'
    properties: {
      model: {
        name: '{{ .Name }}'
        format: '{{ .Format }}'
        version: '{{ .Version }}'
      }
    }
    sku: {
      name: '{{ .Sku.Name }}'
      capacity: {{ .Sku.Capacity }}
    }
  }
{{- end }}

  resource account_name_project_name 'projects@2025-04-01-preview' = {
    name: envName
    location: location
    identity: {
      type: 'SystemAssigned'
    }
    properties: {
      description: '${envName} Project'
      displayName: '${envName}Project'
    }
  }
}

output ENDPOINT string = aiAccount.properties.endpoint
output accountId string = aiAccount.id
{{ end}}
