# database init, supports mysql too
database=h2
#spring.datasource.azure.passwordless-enabled=true
#spring.datasource.url=jdbc:mysql://java-jdemo-mysql-db.mysql.database.azure.com:3306/petclinic?serverTimezone=UTC&sslmode=required&user=aad_mysqlflexible_e8bir
#spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
#spring.sql.init.data-locations=classpath*:db/${database}/data.sql
#database=mysql
#spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
#spring.sql.init.data-locations=classpath*:db/${database}/data.sql
#spring.datasource.url=${MYSQL_URL:jdbc:mysql://ignite-demo-db.mysql.database.azure.com/petclinic}
#spring.datasource.username=${MYSQL_USER:petclinic}
#spring.datasource.password=${MYSQL_PASS:petclinic}
# SQL is written to be idempotent so this is safe
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.sql.init.mode=always
server.port=8080
# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*

# Logging
logging.level.org.springframework=INFO
logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h
