pr:
  branches:
    include: [main]

  paths:
    include:
      - eng/pipelines/build-notice.yml

trigger:
  branches:
    include: [main]


variables:
  - template: /eng/pipelines/templates/variables/globals.yml
  - name: EnableGoCliScan
    value: true

jobs:
  - job: PoliCheck
    pool:
      name: azsdk-pool
      vmImage: windows-2022
    timeoutInMinutes: 120
    steps:
      - template: /eng/common/pipelines/templates/steps/policheck.yml
        parameters:
          ExclusionDataBaseFileName: AzDevPoliCheckExclusion
          PublishAnalysisLogs: false


  - templates: /eng/pipelines/jobs/build-azd-notice.yml
    parameters:
      BuildMatrix:

  - template: /eng/pipelines/templates/jobs/build-azd-notice.yml

  - job: BuildScanVscode
    strategy:
      matrix:
        # Disable Windows build until packaging fixed on Windows https://github.com/Azure/azure-dev/issues/1336
        # Windows:
        #   Pool: azsdk-pool-mms-win-2022-general
        #   OSVmImage: MMS2022
        Linux:
          Pool: azsdk-pool
          OSVmImage:  ubuntu-22.04
        Mac:
          Pool: Azure Pipelines
          OSVmImage: macOS-latest

    pool:
      name: $(Pool)
      demands: ImageOverride -equals $(OSVmImage)

    variables:
      NodeVersion: 18.x

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(NodeVersion)

      - bash: |
          npm install -g npm vsce
          npm ci --no-optional
        workingDirectory: ext/vscode

      - pwsh: ./ci-package.ps1
        workingDirectory: ext/vscode
        displayName: Package

      - task: ComponentGovernanceComponentDetection@0

  - job: GenerateNoticeTxt
    pool:
      name: azsdk-pool
      demands: ImageOverride -equals $(OSVmImage)

    steps:
      - task: ComponentGovernanceComponentDetection@0

      - task: notice@0
        displayName: Generate NOTICE.txt file
        inputs:
          outputfile: $(Build.SourcesDirectory)/NOTICE.txt
          outputformat: text

      - publish: NOTICE.txt
        artifact: notice
