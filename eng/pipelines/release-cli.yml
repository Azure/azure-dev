# Continuous deployment trigger
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - go.mod
      - cli/
      - eng/pipelines/release-cli.yml
      - /eng/pipelines/templates/jobs/build-cli.yml
      - /eng/pipelines/templates/jobs/cross-build-cli.yml
      - /eng/pipelines/templates/variables/image.yml
    exclude:
      - cli/azd/extensions/**

pr:
  paths:
    include:
      - go.mod
      - cli/
      - eng/pipelines/release-cli.yml
      - eng/pipelines/templates/steps/publish-cli.yml
    exclude:
      - cli/azd/docs/**
      - cli/azd/extensions/**

extends: 
  template: /eng/pipelines/templates/stages/1es-redirect.yml
  parameters:
    stages:
    - template: /eng/pipelines/templates/stages/build-and-test.yml
      parameters:
        BuildMatrix:
          Windows:
            Pool: $(WINDOWSPOOL)
            OSVmImage: $(WINDOWSVMIMAGE)
            OS: windows
            ImageKey: image
            UploadArtifact: true
            GhCopilotClientId: $(GH_COPILOT_CLIENT_ID)
            GhCopilotIntegrationId: $(GH_COPILOT_INTEGRATION_ID)
            Variables:
              BuildTarget: azd-windows-amd64.exe
              BuildOutputName: azd.exe
              BuildTestMsi: true
              AZURE_DEV_CI_OS: win
              Codeql.Enabled: true
              Codeql.SkipTaskAutoInjection: false
              Codeql.BuildIdentifier: cli_windows
          Linux:
            Pool: $(LINUXPOOL)
            OSVmImage: $(LINUXVMIMAGE)
            OS: linux
            ImageKey: image
            UploadArtifact: true
            GhCopilotClientId: $(GH_COPILOT_CLIENT_ID)
            GhCopilotIntegrationId: $(GH_COPILOT_INTEGRATION_ID)
            Variables:
              BuildTarget: azd-linux-amd64
              BuildOutputName: azd
              SetExecutableBit: true
              SetShieldInfo: true
              BuildLinuxPackages: true
              AZURE_DEV_CI_OS: lin
              Codeql.Enabled: true
              Codeql.SkipTaskAutoInjection: false
              Codeql.BuildIdentifier: cli_linux
              # Disable cgo in the x64 Linux build. This will also statically
              # link the resulting binary which increases backwards 
              # compatibility with older verisons of Linux.
              CGO_ENABLED: 0
          Mac:
            Pool: Azure Pipelines
            OSVmImage: $(MACVMIMAGE)
            OS: macOS
            ImageKey: vmImage
            UploadArtifact: true
            GhCopilotClientId: $(GH_COPILOT_CLIENT_ID)
            GhCopilotIntegrationId: $(GH_COPILOT_INTEGRATION_ID)
            Variables:
              BuildTarget: azd-darwin-amd64
              BuildOutputName: azd
              MacLocalSign: false
              SetExecutableBit: true
              AZURE_DEV_CI_OS: mac
              # CodeQL on macOS not supported by the Azure DevOps task as-of current.
              # Codeql.BuildIdentifier: cli_darwin

          ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
            # Only run this build during scheduled pipeline executions
            MacAppleSilicon:
              Pool: Azure Pipelines
              OSVmImage: $(MACVMIMAGEM1)
              OS: macOS
              ImageKey: vmImage
              UploadArtifact: false
              GhCopilotClientId: $(GH_COPILOT_CLIENT_ID)
              GhCopilotIntegrationId: $(GH_COPILOT_INTEGRATION_ID)
              Variables:
                BuildTarget: azd-darwin-amd64
                BuildOutputName: azd
                MacLocalSign: false
                SetExecutableBit: true
                AZURE_DEV_CI_OS: mac-arm64

    - template: /eng/pipelines/templates/stages/code-coverage-upload.yml
      parameters:
        DownloadArtifacts:
          - cover-win
          - cover-lin
          - cover-mac
          - ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
            - cover-mac-arm64

    - template: /eng/pipelines/templates/stages/verify-installers.yml

    - ${{ if ne(variables['Build.Reason'], 'Schedule') }}:

      - template: /eng/pipelines/templates/stages/sign.yml

      - template: /eng/pipelines/templates/stages/publish.yml
