resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20230828.1

# Continuous deployment trigger
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - ext/
      - eng/pipelines/release-vscode.yml

pr:
  paths:
    include:
      - ext/
      - eng/pipelines/release-vscode.yml

variables:
  - template: /eng/pipelines/templates/variables/globals.yml

stages:
  - stage: BuildAndTest
    jobs:
      - job: BuildVscode
        strategy:
          matrix:
            Windows:
              Pool: azsdk-pool-mms-win-2022-general
              OSVmImage: MMS2022
            Linux:
              Pool: azsdk-pool-mms-ubuntu-2004-general
              OSVmImage: MMSUbuntu20.04
              UploadArtifact: true
              Codeql.Enabled: true
              Codeql.SkipTaskAutoInjection: false
              Codeql.BuildIdentifier: vscode_linux
            Mac:
              Pool: Azure Pipelines
              OSVmImage: macOS-11

        pool:
          name: $(Pool)
          vmImage: $(OSVmImage)

        variables:
          NodeVersion: 18.x

        steps:
          - checkout: self
          - task: NodeTool@0
            inputs:
              versionSpec: $(NodeVersion)

          - pwsh: |
              npm i -g npm vsce
              npm ci --no-optional
            workingDirectory: ext/vscode
            displayName: Install dependencies

          - pwsh: ./ci-test.ps1
            workingDirectory: ext/vscode
            displayName: Test

          # Sets the version in package.json if this is a Continuous Deployment
          # build.
          - template: /eng/pipelines/templates/steps/set-vscode-version.yml

          # Set PACKAGE_ARGS to an empty string so the version number is
          # included in the filename (default behavior)
          - pwsh: |
              $buildReason = '$(Build.Reason)'
              if ($env:BUILDREASONOVERRIDE) {
                Write-Host "Build reason override: $($env:BUILDREASONOVERRIDE)"
                $buildReason = $env:BUILDREASONOVERRIDE
              }

              $packageArgs = ''
              if ($buildReason -in @('IndividualCI', 'BatchedCI')) {
                Write-Host "CD build detected, using latest configuration for PACKAGE_ARGS"
                $packageArgs = '--out azure-dev-latest.vsix'
              }
              Write-Host "##vso[task.setvariable variable=PACKAGE_ARGS;]$packageArgs"
            displayName: Set PACKAGE_ARGS
            condition: and(succeeded(), eq('true', variables['UploadArtifact']))

          - pwsh: ./ci-package.ps1 -PackageArguments '$(PACKAGE_ARGS)'
            condition: and(succeeded(), eq('true', variables['UploadArtifact']))
            workingDirectory: ext/vscode
            displayName: Package

          - task: PowerShell@2
            condition: and(succeeded(), eq('true', variables['UploadArtifact']))
            inputs:
              pwsh: true
              targetType: filePath
              filePath: eng/scripts/Set-ShieldInfo.ps1
              arguments: >-
                -TemplatePath eng/shields/vscode.json
                -Version "$(VSIX_VERSION)"
            displayName: Set shield info

          - pwsh: |
              New-Item -ItemType Directory -Force -Path build
              Copy-Item *.vsix build/
            workingDirectory: ext/vscode
            condition: and(succeeded(), eq('true', variables['UploadArtifact']))
            displayName: Copy *.vsix to build for upload

          - publish: eng/shields/vscode.json
            condition: and(succeeded(), eq('true', variables['UploadArtifact']))
            artifact: shield-vscode
            displayName: Upload vscode shield json

          - publish: ext/vscode/build
            condition: and(succeeded(), eq('true', variables['UploadArtifact']))
            artifact: vsix

  - stage: Sign
    dependsOn: BuildAndTest
    jobs:

      - job: Sign
        pool:
          name: azsdk-pool-mms-win-2022-general
          vmImage: MMS2022

        steps:
          - checkout: self

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: vsix
              path: vsix

          - ${{ if in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual') }}:
            - template: pipelines/steps/azd-vscode-signing.yml@azure-sdk-build-tools
              parameters:
                VsixPath: vsix

          - ${{ else }}:
            - pwsh: Write-Host "Skipping signing. Build reason - $(Build.Reason)"
              displayName: Signing process skipped for non-release build

          - pwsh: |
              New-Item -ItemType Directory -Path signed
              Copy-Item vsix/ signed/ -Recurse
            displayName: Copy signing outputs
            condition: always()

          # TODO: Replace with https://github.com/Azure/azure-sdk-tools/blob/main/eng/common/pipelines/templates/steps/publish-artifact.yml
          # when the common engsys is imported.
          # https://github.com/Azure/azure-dev/issues/956
          - task: PublishPipelineArtifact@1
            condition: succeeded()
            displayName: Publish Signed Artifacts
            inputs:
              artifactName: signed
              path: signed/

          - task: PublishPipelineArtifact@1
            condition: failed()
            displayName: Publish failed Signed Artifacts
            inputs:
              artifactName: signed-FailedAttempt$(System.JobAttempt)
              path: signed/

  - stage: PublishManual
    dependsOn: Sign
    condition: >-
      and(
        succeeded(),
        ne(variables['Skip.Release'], 'true'),
        or(
          eq('Manual', variables['BuildReasonOverride']),
          and(
            eq('', variables['BuildReasonOverride']),
            eq(variables['Build.Reason'], 'Manual')
          )
        )
      )
    jobs:
      - deployment: Publish_Release
        environment: azure-dev
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          OSVmImage: MMSUbuntu20.04
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - template: /eng/pipelines/templates/steps/set-vscode-version.yml

                - template: /eng/pipelines/templates/steps/publish-vscode.yml
                  parameters:
                    PublishLocations: vscode/release/$(VSIX_VERSION);vscode/release/latest
                    TagRepository: true
                    UpdateShield: true

      - deployment: Increment_Version
        condition: >-
          and(
            succeeded(),
            ne('true', variables['Skip.IncrementVersion'])
          )
        dependsOn: Publish_Release
        environment: azure-dev

        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          OSVmImage: MMSUbuntu20.04

        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: PowerShell@2
                  inputs:
                    pwsh: true
                    targetType: filePath
                    filePath: eng/scripts/Update-VscodeExtensionVersion.ps1
                  displayName: Increment VSCode Extension version

                - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                  parameters:
                    PRBranchName: vscode-version-increment-$(Build.BuildId)
                    CommitMsg: Increment VSCode Extension version after release
                    PRTitle: Increment VSCode Extension version after release

  - stage: PublishIntegration
    dependsOn: Sign
    jobs:
      - job: Publish_Continuous_Deployment
        condition: >-
          and(
            succeeded(),
            ne(variables['Skip.Release'], 'true'),
            or(
              in(variables['BuildReasonOverride'], 'IndividualCI', 'BatchedCI'),
              and(
                eq('', variables['BuildReasonOverride']),
                in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')
              )
            )
          )

        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          OSVmImage: MMSUbuntu20.04

        steps:
          - checkout: self

          - template: /eng/pipelines/templates/steps/set-vscode-version.yml

          - template: /eng/pipelines/templates/steps/publish-vscode.yml
            parameters:
              PublishLocations: vscode/release/daily;vscode/daily/archive/$(Build.BuildId)-$(Build.SourceVersion)

      - job: Publish_For_PR
        condition: >-
          and(
            succeeded(),
            ne(variables['Skip.Release'], 'true'),
            or(
              eq('PullRequest', variables['BuildReasonOverride']),
              and(
                eq('', variables['BuildReasonOverride']),
                eq(variables['Build.Reason'], 'PullRequest')
              )
            )
          )
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          OSVmImage: MMSUbuntu20.04
        steps:
          - checkout: self

          - pwsh: |
              $PRNumber = "$(System.PullRequest.PullRequestNumber)"
              if ($env:PRNUMBEROVERRIDE) {
                Write-Host "PR Number override: $($env:PRNUMBEROVERRIDE)"
                $PRNumber = $env:PRNUMBEROVERRIDE
              }
              Write-Host "##vso[task.setvariable variable=PRNumber]$PRNumber"
            displayName: Set PR Number Variable

          - template: /eng/pipelines/templates/steps/set-vscode-version.yml

          - template: /eng/pipelines/templates/steps/publish-vscode.yml
            parameters:
              PublishLocations: vscode/pr/$(PRNumber)

          - pwsh: |
              $downloadUrl = "https://$(azdev-storage-account-name).blob.core.windows.net/azd/vscode/pr/$(PRNumber)/azure-dev-$(VSIX_VERSION).vsix"

              $content = @"
              <!-- #comment-vscode-pr -->
              ## VSCode Extension Installation Instructions

              1. Download the extension at $downloadUrl
              2. Extract the extension from the compressed file
              3. In vscode
                a. Open "Extensions" (Ctrl+Shift+X)
                b. Click the \`...\` menu at top of Extensions sidebar
                c. Click "Install from VSIX"
                d. Select location of downloaded file
              "@
              $file = New-TemporaryFile
              Set-Content -Path $file -Value $content
              Write-Host "##vso[task.setvariable variable=CommentBodyFile]$file"
            displayName: Write body content to temporary file

          - task: PowerShell@2
            displayName: Add PR comment
            inputs:
              pwsh: true
              targetType: filePath
              filePath: ./eng/scripts/Update-PRComment.ps1
              arguments: >-
                -Repo "azure/azure-dev"
                -PrNumber $(PRNumber)
                -Tag "<!-- #comment-vscode-pr -->"
                -BodyFile $(CommentBodyFile)
            env:
              GH_TOKEN: $(azuresdk-github-pat)
