parameters:
  TagRepository: false
  VsixVersion: $(VSIX_VERSION)
  UpdateShield: false
  StorageContainerName: azd

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: signed
      path: signed

  - ${{ if eq('true', parameters.TagRepository) }}:
    # Perform tag verification before publishing anything
    - task: PowerShell@2
      inputs:
        pwsh: true
        targetType: filePath
        filePath: ./eng/scripts/Set-GitHubReleaseTag.ps1
        arguments: >-
          -Tag "azure-dev-vscode_${{ parameters.VsixVersion }}"
          -OutputName "GH_RELEASE_TAG"
          -DevOpsOutputFormat
      displayName: Verify and set GitHub Release Tag

  - pwsh: |
      New-Item -ItemType Directory -Path release -Force
      Copy-Item signed/vsix/*.vsix release/
      Write-Host "Signed:"
      Get-ChildItem signed/
    displayName: Copy signed vsix to release location

  - task: AzurePowerShell@5
    displayName: Publish files to storage locations
    inputs:
      azureSubscription: 'Azure SDK Artifacts'
      azurePowerShellVersion: LatestVersion
      pwsh: true
      ScriptType: InlineScript
      Inline: |
        $publishLocations = "${{ parameters.PublishLocations }}" -split ';'
        foreach ($location in $publishLocations) {
          Write-Host "Publishing to $location"
          azcopy copy 'release' '$(publish-storage-location)/${{ parameters.StorageContainerName }}/$location' --recursive --overwrite
        }
      env:
        AZCOPY_AUTO_LOGIN_TYPE: 'PSCRED'

  - ${{ if eq('true', parameters.UpdateShield) }}:
    - template: /eng/pipelines/templates/steps/publish-shield.yml
      parameters:
        ArtifactName: shield-vscode
        ArtifactDownloadPath: shields/vscode
        ArtifactFilename: vscode.json
        StorageContainerName: ${{ parameters.StorageContainerName }}
        PublishDestination: vscode/latest

  - ${{ if eq('true', parameters.TagRepository) }}:
    - task: PowerShell@2
      inputs:
        targetType: filePath
        filePath: eng/scripts/New-ReleaseNotesFile.ps1
        arguments: >-
          -ChangeLogPath ext/vscode/CHANGELOG.md
          -Version ${{ parameters.VsixVersion }}
          -DevOpsOutputFormat
      displayName: Set release changelog content

    - pwsh: |
        gh release create `
          "$(GH_RELEASE_TAG)" `
          --title "$(GH_RELEASE_TAG)" `
          --notes-file $(ReleaseChangeLogPath)

        gh release upload $(GH_RELEASE_TAG) release/*
      displayName: Create GitHub Release and upload artifacts
      env:
        GH_TOKEN: $(azuresdk-github-pat)
