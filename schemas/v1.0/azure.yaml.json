{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json",
    "type": "object",
    "required": [
        "name",
        "services"
    ],
    "additionalProperties": false,
    "properties": {
        "name": {
            "type": "string",
            "minLength": 2,
            "title": "Name of the application"
        },
        "resourceGroup": {
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "title": "Name of the Azure resource group",
            "description": "When specified will override the resource group name used for infrastructure provisioning."
        },
        "metadata": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string",
                    "title": "Identifier of the template from which the application was created. Optional.",
                    "examples": [
                        "todo-nodejs-mongo@0.0.1-beta"
                    ]
                }
            }
        },
        "infra": {
            "type": "object",
            "title": "The infrastructure configuration used for the application",
            "description": "Optional. Provides additional configuration for Azure infrastructure provisioning.",
            "additionalProperties": true,
            "properties": {
                "provider": {
                    "type": "string",
                    "title": "Type of infrastructure provisioning provider",
                    "description": "Optional. The infrastructure provisioning provider used to provision the Azure resources for the application. (Default: bicep)",
                    "enum": [
                        "bicep",
                        "terraform"
                    ]
                },
                "path": {
                    "type": "string",
                    "title": "Path to the location that contains Azure provisioning templates",
                    "description": "Optional. The relative folder path to the Azure provisioning templates for the specified provider. (Default: infra)"
                },
                "module": {
                    "type": "string",
                    "title": "Name of the default module within the Azure provisioning templates",
                    "description": "Optional. The name of the Azure provisioning module used when provisioning resources. (Default: main)"
                }
            }
        },
        "services": {
            "type": "object",
            "title": "Definition of services that comprise the application",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "resourceName": {
                        "type": "string",
                        "title": "Name of the Azure resource that implements the service",
                        "description": "By default, the CLI will discover the Azure resource with tag 'azd-service-name' set to the current service's name. When specified, the CLI will instead find the Azure resource with the matching resource name."
                    },
                    "project": {
                        "type": "string",
                        "title": "Path to the service source code directory"
                    },
                    "host": {
                        "type": "string",
                        "title": "Type of Azure resource used for service implementation",
                        "description": "If omitted, App Service will be assumed.",
                        "enum": [
                            "",
                            "appservice",
                            "containerapp",
                            "function",
                            "staticwebapp"
                        ]
                    },
                    "language": {
                        "type": "string",
                        "title": "Service implementation language",
                        "description": "If omitted, .NET will be assumed.",
                        "enum": [
                            "",
                            "dotnet",
                            "csharp",
                            "fsharp",
                            "py",
                            "python",
                            "js",
                            "ts",
                            "java"
                        ]
                    },
                    "module": {
                        "type": "string",
                        "title": "Path of the infrastructure module used to deploy the service relative to the root infra folder",
                        "description": "If omitted, the CLI will assume the module name is the same as the service name."
                    },
                    "dist": {
                        "type": "string",
                        "title": "Relative path to service deployment artifacts"
                    },
                    "docker": {
                        "type": "object",
                        "description": "This is only applicable when `host` is `containerapp`",
                        "additionalProperties": false,
                        "properties": {
                            "path": {
                                "type": "string",
                                "title": "The path to the Dockerfile",
                                "description": "Path to the Dockerfile is relative to your service",
                                "default": "./Dockerfile"
                            },
                            "context": {
                                "type": "string",
                                "title": "The docker build context",
                                "description": "When specified overrides the default context",
                                "default": "."
                            },
                            "platform": {
                                "type": "string",
                                "title": "The platform target",
                                "default": "amd64"
                            },
                            "tag": {
                                "type": "string",
                                "title": "The tag that will be applied to the built container image.",
                                "description": ""
                            }
                        }
                    },
                    "scripts": {
                        "type": "object",
                        "title": "Definition of command hooks for developer integration",
                        "descriptions": "Command hooks should match `azd` command names prefixed with `pre` or `post` depending on when the script should execute relative to the command",
                        "minProperties": 1,
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "title": "Type of script",
                                    "description": "Optional. The type of script to use for the command hook. (Default: bash)",
                                    "enum": [
                                        "bash",
                                        "powershell"
                                    ]
                                },
                                "location": {
                                    "type": "string",
                                    "title": "The location of the script",
                                    "description": "Optional. The script can reference a file system path or be declared inline. (Default: path)",
                                    "enum": [
                                        "path",
                                        "inline"
                                    ]
                                },
                                "path": {
                                    "type": "string",
                                    "title": "Path to the command hook script relative to the azure.yaml file",
                                    "description": "When `location` is set to `path` contains the full relative path to the command hook to execute"
                                },
                                "script": {
                                    "type": "string",
                                    "title": "The inline script to execute for the command hook",
                                    "description": "When `location` is set to `inline` contains the full script to execute"
                                },
                                "continueOnError": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "Whether or not a script error will halt the azd command",
                                    "description": "Optional. When set to true will continue to run the command even after a script error has occurred. (Default: false)"
                                },
                                "interactive": {
                                    "type": "boolean",
                                    "default": true,
                                    "title": "Whether the script will run in interactive mode",
                                    "description": "Optional. When set to true will bind the script to stdin, stdout & stderr of the running console. (Default: false)"
                                }
                            },
                            "allOf": [
                                {
                                    "if": {
                                        "properties": {
                                            "location": {
                                                "const": "inline"
                                            }
                                        },
                                        "required": [
                                            "location"
                                        ]
                                    },
                                    "then": {
                                        "required": [
                                            "script",
                                            "type"
                                        ],
                                        "properties": {
                                            "path": false
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "location": {
                                                "const": "path"
                                            }
                                        },
                                        "required": [
                                            "location"
                                        ]
                                    },
                                    "then": {
                                        "required": [
                                            "path"
                                        ],
                                        "properties": {
                                            "script": false
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "required": [
                                            "path"
                                        ]
                                    },
                                    "then": {
                                        "required": [
                                            "path"
                                        ],
                                        "properties": {
                                            "script": false
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "required": [
                                            "script"
                                        ]
                                    },
                                    "then": {
                                        "required": [
                                            "script",
                                            "type"
                                        ],
                                        "properties": {
                                            "path": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "required": [
                    "project"
                ],
                "allOf": [
                    {
                        "if": {
                            "not": {
                                "properties": {
                                    "host": {
                                        "const": "containerapp"
                                    }
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "docker": false
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "language": {
                                    "const": "java"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "dist": {
                                    "type": "string",
                                    "description": "The CLI will use the JAR file in this directory to create the deployment artifact (ZIP file). If omitted, the CLI will detect the output directory based on the build system in-use."
                                }
                            }
                        }
                    },
                    {
                        "properties": {
                            "dist": {
                                "type": "string",
                                "description": "The CLI will use files under this path to create the deployment artifact (ZIP file). If omitted, all files under service project directory will be included."
                            }
                        }
                    }
                ]
            }
        },
        "pipeline": {
            "type": "object",
            "title": "Definition of continuous integration pipeline",
            "properties": {
                "provider": {
                    "type": "string",
                    "title": "Type of pipeline provider",
                    "description": "Optional. The pipeline provider to be used for continuous integration. (Default: github)",
                    "enum": [
                        "github",
                        "azdo"
                    ]
                }
            }
        },
        "scripts": {
            "type": "object",
            "title": "Definition of command hooks for developer integration",
            "descriptions": "Command hooks should match `azd` command names prefixed with `pre` or `post` depending on when the script should execute relative to the command",
            "minProperties": 1,
            "additionalProperties": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type of script",
                        "description": "Optional. The type of script to use for the command hook. (Default: bash)",
                        "enum": [
                            "bash",
                            "powershell"
                        ],
                        "default": "bash"
                    },
                    "location": {
                        "type": "string",
                        "title": "The location of the script",
                        "description": "Optional. The script can reference a file system path or be declared inline. (Default: path)",
                        "enum": [
                            "path",
                            "inline"
                        ],
                        "default": "path"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path to the command hook script relative to the azure.yaml file",
                        "description": "When `location` is set to `path` contains the full relative path to the command hook to execute"
                    },
                    "script": {
                        "type": "string",
                        "title": "The inline script to execute for the command hook",
                        "description": "When `location` is set to `inline` contains the full script to execute"
                    },
                    "continueOnError": {
                        "type": "boolean",
                        "default": false,
                        "title": "Whether or not a script error will halt the azd command",
                        "description": "Optional. When set to true will continue to run the command even after a script error has occurred. (Default: false)"
                    },
                    "interactive": {
                        "type": "boolean",
                        "default": true,
                        "title": "Whether the script will run in interactive mode",
                        "description": "Optional. When set to true will bind the script to stdin, stdout & stderr of the running console. (Default: false)"
                    }
                },
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "location": {
                                    "const": "inline"
                                }
                            },
                            "required": [
                                "location"
                            ]
                        },
                        "then": {
                            "required": [
                                "script",
                                "type"
                            ],
                            "properties": {
                                "path": false
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "location": {
                                    "const": "path"
                                }
                            },
                            "required": [
                                "location"
                            ]
                        },
                        "then": {
                            "required": [
                                "path"
                            ],
                            "properties": {
                                "script": false
                            }
                        }
                    },
                    {
                        "if": {
                            "required": [
                                "path"
                            ]
                        },
                        "then": {
                            "required": [
                                "path"
                            ],
                            "properties": {
                                "script": false
                            }
                        }
                    },
                    {
                        "if": {
                            "required": [
                                "script"
                            ]
                        },
                        "then": {
                            "required": [
                                "script",
                                "type"
                            ],
                            "properties": {
                                "path": false
                            }
                        }
                    }
                ]
            }
        }
    }
}