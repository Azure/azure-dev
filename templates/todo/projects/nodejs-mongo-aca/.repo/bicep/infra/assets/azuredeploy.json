{
  "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "5508817449258227362"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "apiContainerAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "applicationInsightsDashboardName": {
      "type": "string",
      "defaultValue": ""
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerAppsEnvironmentName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": ""
    },
    "cosmosAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "cosmosDatabaseName": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": ""
    },
    "webContainerAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "apimServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "apiAppExists": {
      "type": "bool",
      "defaultValue": false
    },
    "webAppExists": {
      "type": "bool",
      "defaultValue": false
    },
    "useAPIM": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Flag to use Azure API Management to mediate the calls between the Web frontend and the backend API"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "webApiBaseUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The base URL used by the web service for sending API requests"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "apiContainerAppNameOrDefault": "[format('{0}web-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-apps",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "app"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "containerAppsEnvironmentName": "[if(not(empty(parameters('containerAppsEnvironmentName'))), createObject('value', parameters('containerAppsEnvironmentName')), createObject('value', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))))]",
          "containerRegistryName": "[if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))))]",
          "logAnalyticsWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "15723988335963267943"
            },
            "description": "Creates an Azure Container Registry and an Azure Container Apps environment."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "containerRegistryResourceGroupName": {
              "type": "string",
              "defaultValue": ""
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-apps-environment', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('logAnalyticsWorkspaceName')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "7820798294319036671"
                    },
                    "description": "Creates an Azure Container Apps environment."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Name of the Application Insights resource"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Specifies if Dapr is enabled"
                      }
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Log Analytics workspace"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/managedEnvironments",
                      "apiVersion": "2023-04-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "appLogsConfiguration": {
                          "destination": "log-analytics",
                          "logAnalyticsConfiguration": {
                            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]",
                            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                          }
                        },
                        "daprAIInstrumentationKey": "[if(and(parameters('daprEnabled'), not(empty(parameters('applicationInsightsName')))), reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, '')]"
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('name')), '2023-04-01-preview').defaultDomain]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-registry', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "2245433210041360409"
                    },
                    "description": "Creates an Azure Container Registry."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "adminUserEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether admin user is enabled"
                      }
                    },
                    "anonymousPullEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether anonymous pull is enabled"
                      }
                    },
                    "dataEndpointEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Indicates whether data endpoint is enabled"
                      }
                    },
                    "encryption": {
                      "type": "object",
                      "defaultValue": {
                        "status": "disabled"
                      },
                      "metadata": {
                        "description": "Encryption settings"
                      }
                    },
                    "networkRuleBypassOptions": {
                      "type": "string",
                      "defaultValue": "AzureServices",
                      "metadata": {
                        "description": "Options for bypassing network rules"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "metadata": {
                        "description": "Public network access setting"
                      }
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Basic"
                      },
                      "metadata": {
                        "description": "SKU settings"
                      }
                    },
                    "zoneRedundancy": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Zone redundancy setting"
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The log analytics workspace ID used for logging and monitoring"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2022-02-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "adminUserEnabled": "[parameters('adminUserEnabled')]",
                        "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                        "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                        "encryption": "[parameters('encryption')]",
                        "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "zoneRedundancy": "[parameters('zoneRedundancy')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('workspaceId')))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
                      "name": "registry-diagnostics",
                      "properties": {
                        "workspaceId": "[parameters('workspaceId')]",
                        "logs": [
                          {
                            "category": "ContainerRegistryRepositoryEvents",
                            "enabled": true
                          },
                          {
                            "category": "ContainerRegistryLoginEvents",
                            "enabled": true
                          }
                        ],
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true,
                            "timeGrain": "PT1M"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "loginServer": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2022-02-01-preview').loginServer]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.defaultDomain.value]"
            },
            "environmentName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "environmentId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2022-09-01').outputs.id.value]"
            },
            "registryLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.loginServer.value]"
            },
            "registryName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "web",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('webContainerAppName'))), createObject('value', parameters('webContainerAppName')), createObject('value', format('{0}web-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "identityName": {
            "value": "[format('{0}web-{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]"
          },
          "apiBaseUrl": "[if(not(empty(parameters('webApiBaseUrl'))), createObject('value', parameters('webApiBaseUrl')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value))]",
          "applicationInsightsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "containerAppsEnvironmentName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
          },
          "containerRegistryName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryName.value]"
          },
          "exists": {
            "value": "[parameters('webAppExists')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "7076369721458700468"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "identityName": {
              "type": "string"
            },
            "apiBaseUrl": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "web"
            },
            "exists": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-app', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "identityType": {
                    "value": "UserAssigned"
                  },
                  "identityName": {
                    "value": "[parameters('identityName')]"
                  },
                  "exists": {
                    "value": "[parameters('exists')]"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "env": {
                    "value": [
                      {
                        "name": "REACT_APP_APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                      },
                      {
                        "name": "REACT_APP_API_BASE_URL",
                        "value": "[parameters('apiBaseUrl')]"
                      },
                      {
                        "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                      }
                    ]
                  },
                  "targetPort": {
                    "value": 80
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "18000323914714494769"
                    },
                    "description": "Creates or updates an existing Azure Container App."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "metadata": {
                        "description": "The environment name for the container apps"
                      }
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "The number of CPU cores allocated to a single container instance, e.g., 0.5"
                      }
                    },
                    "containerMaxReplicas": {
                      "type": "int",
                      "defaultValue": 10,
                      "minValue": 1,
                      "metadata": {
                        "description": "The maximum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "The amount of memory allocated to a single container instance, e.g., 1Gi"
                      }
                    },
                    "containerMinReplicas": {
                      "type": "int",
                      "defaultValue": 1,
                      "minValue": 1,
                      "metadata": {
                        "description": "The minimum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main",
                      "metadata": {
                        "description": "The name of the container"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container registry"
                      }
                    },
                    "daprAppProtocol": {
                      "type": "string",
                      "defaultValue": "http",
                      "allowedValues": [
                        "http",
                        "grpc"
                      ],
                      "metadata": {
                        "description": "The protocol used by Dapr to connect to the app, e.g., HTTP or gRPC"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable or disable Dapr for the container app"
                      }
                    },
                    "daprAppId": {
                      "type": "string",
                      "defaultValue": "[parameters('containerName')]",
                      "metadata": {
                        "description": "The Dapr app ID"
                      }
                    },
                    "exists": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Specifies if the resource already exists"
                      }
                    },
                    "ingressEnabled": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if Ingress is enabled for the container app"
                      }
                    },
                    "identityType": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "metadata": {
                        "description": "The type of identity for the resource"
                      }
                    },
                    "identityName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the user-assigned identity"
                      }
                    },
                    "imageName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container image"
                      }
                    },
                    "secrets": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The secrets required for the container"
                      }
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The environment variables for the container"
                      }
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if the resource ingress is exposed externally"
                      }
                    },
                    "serviceBinds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The service binds associated with the container"
                      }
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80,
                      "metadata": {
                        "description": "The target port for the container"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-update', deployment().name)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "identityType": {
                            "value": "[parameters('identityType')]"
                          },
                          "identityName": {
                            "value": "[parameters('identityName')]"
                          },
                          "ingressEnabled": {
                            "value": "[parameters('ingressEnabled')]"
                          },
                          "containerName": {
                            "value": "[parameters('containerName')]"
                          },
                          "containerAppsEnvironmentName": {
                            "value": "[parameters('containerAppsEnvironmentName')]"
                          },
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "containerCpuCoreCount": {
                            "value": "[parameters('containerCpuCoreCount')]"
                          },
                          "containerMemory": {
                            "value": "[parameters('containerMemory')]"
                          },
                          "containerMinReplicas": {
                            "value": "[parameters('containerMinReplicas')]"
                          },
                          "containerMaxReplicas": {
                            "value": "[parameters('containerMaxReplicas')]"
                          },
                          "daprEnabled": {
                            "value": "[parameters('daprEnabled')]"
                          },
                          "daprAppId": {
                            "value": "[parameters('daprAppId')]"
                          },
                          "daprAppProtocol": {
                            "value": "[parameters('daprAppProtocol')]"
                          },
                          "secrets": {
                            "value": "[parameters('secrets')]"
                          },
                          "external": {
                            "value": "[parameters('external')]"
                          },
                          "env": {
                            "value": "[parameters('env')]"
                          },
                          "imageName": "[if(not(empty(parameters('imageName'))), createObject('value', parameters('imageName')), if(parameters('exists'), createObject('value', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-04-01-preview').template.containers[0].image), createObject('value', '')))]",
                          "targetPort": {
                            "value": "[parameters('targetPort')]"
                          },
                          "serviceBinds": {
                            "value": "[parameters('serviceBinds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.21.1.54444",
                              "templateHash": "544544143713108597"
                            },
                            "description": "Creates a container app in an Azure Container App environment."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Allowed origins"
                              }
                            },
                            "containerAppsEnvironmentName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the environment for container apps"
                              }
                            },
                            "containerCpuCoreCount": {
                              "type": "string",
                              "defaultValue": "0.5",
                              "metadata": {
                                "description": "CPU cores allocated to a single container instance, e.g., 0.5"
                              }
                            },
                            "containerMaxReplicas": {
                              "type": "int",
                              "defaultValue": 10,
                              "minValue": 1,
                              "metadata": {
                                "description": "The maximum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerMemory": {
                              "type": "string",
                              "defaultValue": "1.0Gi",
                              "metadata": {
                                "description": "Memory allocated to a single container instance, e.g., 1Gi"
                              }
                            },
                            "containerMinReplicas": {
                              "type": "int",
                              "defaultValue": 1,
                              "metadata": {
                                "description": "The minimum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerName": {
                              "type": "string",
                              "defaultValue": "main",
                              "metadata": {
                                "description": "The name of the container"
                              }
                            },
                            "containerRegistryName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container registry"
                              }
                            },
                            "daprAppProtocol": {
                              "type": "string",
                              "defaultValue": "http",
                              "allowedValues": [
                                "http",
                                "grpc"
                              ],
                              "metadata": {
                                "description": "The protocol used by Dapr to connect to the app, e.g., http or grpc"
                              }
                            },
                            "daprAppId": {
                              "type": "string",
                              "defaultValue": "[parameters('containerName')]",
                              "metadata": {
                                "description": "The Dapr app ID"
                              }
                            },
                            "daprEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Enable Dapr"
                              }
                            },
                            "env": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The environment variables for the container"
                              }
                            },
                            "external": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if the resource ingress is exposed externally"
                              }
                            },
                            "identityName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the user-assigned identity"
                              }
                            },
                            "identityType": {
                              "type": "string",
                              "defaultValue": "None",
                              "allowedValues": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "metadata": {
                                "description": "The type of identity for the resource"
                              }
                            },
                            "imageName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container image"
                              }
                            },
                            "ingressEnabled": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if Ingress is enabled for the container app"
                              }
                            },
                            "revisionMode": {
                              "type": "string",
                              "defaultValue": "Single"
                            },
                            "secrets": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The secrets required for the container"
                              }
                            },
                            "serviceBinds": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The service binds associated with the container"
                              }
                            },
                            "serviceType": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container apps add-on to use. e.g. redis"
                              }
                            },
                            "targetPort": {
                              "type": "int",
                              "defaultValue": 80,
                              "metadata": {
                                "description": "The target port for the container"
                              }
                            }
                          },
                          "variables": {
                            "usePrivateRegistry": "[and(not(empty(parameters('identityName'))), not(empty(parameters('containerRegistryName'))))]",
                            "normalizedIdentityType": "[if(not(empty(parameters('identityName'))), 'UserAssigned', parameters('identityType'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.App/containerApps",
                              "apiVersion": "2023-04-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[variables('normalizedIdentityType')]",
                                "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(variables('normalizedIdentityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
                              },
                              "properties": {
                                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                                "configuration": {
                                  "activeRevisionsMode": "[parameters('revisionMode')]",
                                  "ingress": "[if(parameters('ingressEnabled'), createObject('external', parameters('external'), 'targetPort', parameters('targetPort'), 'transport', 'auto', 'corsPolicy', createObject('allowedOrigins', union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins')))), null())]",
                                  "dapr": "[if(parameters('daprEnabled'), createObject('enabled', true(), 'appId', parameters('daprAppId'), 'appProtocol', parameters('daprAppProtocol'), 'appPort', if(parameters('ingressEnabled'), parameters('targetPort'), 0)), createObject('enabled', false()))]",
                                  "secrets": "[parameters('secrets')]",
                                  "service": "[if(not(empty(parameters('serviceType'))), createObject('type', parameters('serviceType')), null())]",
                                  "registries": "[if(variables('usePrivateRegistry'), createArray(createObject('server', format('{0}.azurecr.io', parameters('containerRegistryName')), 'identity', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))), createArray())]"
                                },
                                "template": {
                                  "serviceBinds": "[if(not(empty(parameters('serviceBinds'))), parameters('serviceBinds'), null())]",
                                  "containers": [
                                    {
                                      "image": "[if(not(empty(parameters('imageName'))), parameters('imageName'), 'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest')]",
                                      "name": "[parameters('containerName')]",
                                      "env": "[parameters('env')]",
                                      "resources": {
                                        "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                        "memory": "[parameters('containerMemory')]"
                                      }
                                    }
                                  ],
                                  "scale": {
                                    "minReplicas": "[parameters('containerMinReplicas')]",
                                    "maxReplicas": "[parameters('containerMaxReplicas')]"
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', format('{0}-registry-access', deployment().name))]"
                              ]
                            },
                            {
                              "condition": "[variables('usePrivateRegistry')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-registry-access', deployment().name)]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "containerRegistryName": {
                                    "value": "[parameters('containerRegistryName')]"
                                  },
                                  "principalId": "[if(variables('usePrivateRegistry'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', ''))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.21.1.54444",
                                      "templateHash": "3823587007918481878"
                                    },
                                    "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                                  },
                                  "parameters": {
                                    "containerRegistryName": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2022-04-01",
                                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                                      "properties": {
                                        "roleDefinitionId": "[variables('acrPullRole')]",
                                        "principalType": "ServicePrincipal",
                                        "principalId": "[parameters('principalId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "defaultDomain": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName')), '2023-04-01-preview').defaultDomain]"
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(variables('normalizedIdentityType'), 'None'), '', if(empty(parameters('identityName')), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-04-01-preview', 'full').identity.principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId))]"
                            },
                            "imageName": {
                              "type": "string",
                              "value": "[parameters('imageName')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "serviceBind": {
                              "type": "object",
                              "value": "[if(not(empty(parameters('serviceType'))), createObject('serviceId', resourceId('Microsoft.App/containerApps', parameters('name')), 'name', parameters('name')), createObject())]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[if(parameters('ingressEnabled'), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-04-01-preview').configuration.ingress.fqdn), '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.defaultDomain.value]"
                    },
                    "imageName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.imageName.value]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.uri.value]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_WEB_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId]"
            },
            "SERVICE_WEB_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app', parameters('serviceName'))), '2022-09-01').outputs.name.value]"
            },
            "SERVICE_WEB_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app', parameters('serviceName'))), '2022-09-01').outputs.uri.value]"
            },
            "SERVICE_WEB_IMAGE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app', parameters('serviceName'))), '2022-09-01').outputs.imageName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api')]",
        "[resourceId('Microsoft.Resources/deployments', 'container-apps')]",
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "api",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('apiContainerAppName'))), createObject('value', parameters('apiContainerAppName')), createObject('value', format('{0}api-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "identityName": {
            "value": "[format('{0}api-{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]"
          },
          "applicationInsightsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "containerAppsEnvironmentName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
          },
          "containerRegistryName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryName.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value]"
          },
          "corsAcaUrl": {
            "value": "[format('https://{0}.{1}', variables('apiContainerAppNameOrDefault'), reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.defaultDomain.value)]"
          },
          "exists": {
            "value": "[parameters('apiAppExists')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "5987090755712582365"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "identityName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "api"
            },
            "corsAcaUrl": {
              "type": "string"
            },
            "exists": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "api-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "7211460666347195796"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-container-app', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "identityType": {
                    "value": "UserAssigned"
                  },
                  "identityName": {
                    "value": "[parameters('identityName')]"
                  },
                  "exists": {
                    "value": "[parameters('exists')]"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "containerCpuCoreCount": {
                    "value": "1.0"
                  },
                  "containerMemory": {
                    "value": "2.0Gi"
                  },
                  "env": {
                    "value": [
                      {
                        "name": "AZURE_CLIENT_ID",
                        "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').clientId]"
                      },
                      {
                        "name": "AZURE_KEY_VAULT_ENDPOINT",
                        "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri]"
                      },
                      {
                        "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                      },
                      {
                        "name": "API_ALLOW_ORIGINS",
                        "value": "[parameters('corsAcaUrl')]"
                      }
                    ]
                  },
                  "targetPort": {
                    "value": 3100
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "18000323914714494769"
                    },
                    "description": "Creates or updates an existing Azure Container App."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "metadata": {
                        "description": "The environment name for the container apps"
                      }
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "The number of CPU cores allocated to a single container instance, e.g., 0.5"
                      }
                    },
                    "containerMaxReplicas": {
                      "type": "int",
                      "defaultValue": 10,
                      "minValue": 1,
                      "metadata": {
                        "description": "The maximum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "The amount of memory allocated to a single container instance, e.g., 1Gi"
                      }
                    },
                    "containerMinReplicas": {
                      "type": "int",
                      "defaultValue": 1,
                      "minValue": 1,
                      "metadata": {
                        "description": "The minimum number of replicas to run. Must be at least 1."
                      }
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main",
                      "metadata": {
                        "description": "The name of the container"
                      }
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container registry"
                      }
                    },
                    "daprAppProtocol": {
                      "type": "string",
                      "defaultValue": "http",
                      "allowedValues": [
                        "http",
                        "grpc"
                      ],
                      "metadata": {
                        "description": "The protocol used by Dapr to connect to the app, e.g., HTTP or gRPC"
                      }
                    },
                    "daprEnabled": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable or disable Dapr for the container app"
                      }
                    },
                    "daprAppId": {
                      "type": "string",
                      "defaultValue": "[parameters('containerName')]",
                      "metadata": {
                        "description": "The Dapr app ID"
                      }
                    },
                    "exists": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Specifies if the resource already exists"
                      }
                    },
                    "ingressEnabled": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if Ingress is enabled for the container app"
                      }
                    },
                    "identityType": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ],
                      "metadata": {
                        "description": "The type of identity for the resource"
                      }
                    },
                    "identityName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the user-assigned identity"
                      }
                    },
                    "imageName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The name of the container image"
                      }
                    },
                    "secrets": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The secrets required for the container"
                      }
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The environment variables for the container"
                      }
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies if the resource ingress is exposed externally"
                      }
                    },
                    "serviceBinds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "The service binds associated with the container"
                      }
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80,
                      "metadata": {
                        "description": "The target port for the container"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-update', deployment().name)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "identityType": {
                            "value": "[parameters('identityType')]"
                          },
                          "identityName": {
                            "value": "[parameters('identityName')]"
                          },
                          "ingressEnabled": {
                            "value": "[parameters('ingressEnabled')]"
                          },
                          "containerName": {
                            "value": "[parameters('containerName')]"
                          },
                          "containerAppsEnvironmentName": {
                            "value": "[parameters('containerAppsEnvironmentName')]"
                          },
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "containerCpuCoreCount": {
                            "value": "[parameters('containerCpuCoreCount')]"
                          },
                          "containerMemory": {
                            "value": "[parameters('containerMemory')]"
                          },
                          "containerMinReplicas": {
                            "value": "[parameters('containerMinReplicas')]"
                          },
                          "containerMaxReplicas": {
                            "value": "[parameters('containerMaxReplicas')]"
                          },
                          "daprEnabled": {
                            "value": "[parameters('daprEnabled')]"
                          },
                          "daprAppId": {
                            "value": "[parameters('daprAppId')]"
                          },
                          "daprAppProtocol": {
                            "value": "[parameters('daprAppProtocol')]"
                          },
                          "secrets": {
                            "value": "[parameters('secrets')]"
                          },
                          "external": {
                            "value": "[parameters('external')]"
                          },
                          "env": {
                            "value": "[parameters('env')]"
                          },
                          "imageName": "[if(not(empty(parameters('imageName'))), createObject('value', parameters('imageName')), if(parameters('exists'), createObject('value', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-04-01-preview').template.containers[0].image), createObject('value', '')))]",
                          "targetPort": {
                            "value": "[parameters('targetPort')]"
                          },
                          "serviceBinds": {
                            "value": "[parameters('serviceBinds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.21.1.54444",
                              "templateHash": "544544143713108597"
                            },
                            "description": "Creates a container app in an Azure Container App environment."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Allowed origins"
                              }
                            },
                            "containerAppsEnvironmentName": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the environment for container apps"
                              }
                            },
                            "containerCpuCoreCount": {
                              "type": "string",
                              "defaultValue": "0.5",
                              "metadata": {
                                "description": "CPU cores allocated to a single container instance, e.g., 0.5"
                              }
                            },
                            "containerMaxReplicas": {
                              "type": "int",
                              "defaultValue": 10,
                              "minValue": 1,
                              "metadata": {
                                "description": "The maximum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerMemory": {
                              "type": "string",
                              "defaultValue": "1.0Gi",
                              "metadata": {
                                "description": "Memory allocated to a single container instance, e.g., 1Gi"
                              }
                            },
                            "containerMinReplicas": {
                              "type": "int",
                              "defaultValue": 1,
                              "metadata": {
                                "description": "The minimum number of replicas to run. Must be at least 1."
                              }
                            },
                            "containerName": {
                              "type": "string",
                              "defaultValue": "main",
                              "metadata": {
                                "description": "The name of the container"
                              }
                            },
                            "containerRegistryName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container registry"
                              }
                            },
                            "daprAppProtocol": {
                              "type": "string",
                              "defaultValue": "http",
                              "allowedValues": [
                                "http",
                                "grpc"
                              ],
                              "metadata": {
                                "description": "The protocol used by Dapr to connect to the app, e.g., http or grpc"
                              }
                            },
                            "daprAppId": {
                              "type": "string",
                              "defaultValue": "[parameters('containerName')]",
                              "metadata": {
                                "description": "The Dapr app ID"
                              }
                            },
                            "daprEnabled": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Enable Dapr"
                              }
                            },
                            "env": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The environment variables for the container"
                              }
                            },
                            "external": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if the resource ingress is exposed externally"
                              }
                            },
                            "identityName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the user-assigned identity"
                              }
                            },
                            "identityType": {
                              "type": "string",
                              "defaultValue": "None",
                              "allowedValues": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned"
                              ],
                              "metadata": {
                                "description": "The type of identity for the resource"
                              }
                            },
                            "imageName": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container image"
                              }
                            },
                            "ingressEnabled": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Specifies if Ingress is enabled for the container app"
                              }
                            },
                            "revisionMode": {
                              "type": "string",
                              "defaultValue": "Single"
                            },
                            "secrets": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The secrets required for the container"
                              }
                            },
                            "serviceBinds": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "The service binds associated with the container"
                              }
                            },
                            "serviceType": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "The name of the container apps add-on to use. e.g. redis"
                              }
                            },
                            "targetPort": {
                              "type": "int",
                              "defaultValue": 80,
                              "metadata": {
                                "description": "The target port for the container"
                              }
                            }
                          },
                          "variables": {
                            "usePrivateRegistry": "[and(not(empty(parameters('identityName'))), not(empty(parameters('containerRegistryName'))))]",
                            "normalizedIdentityType": "[if(not(empty(parameters('identityName'))), 'UserAssigned', parameters('identityType'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.App/containerApps",
                              "apiVersion": "2023-04-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "identity": {
                                "type": "[variables('normalizedIdentityType')]",
                                "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(variables('normalizedIdentityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
                              },
                              "properties": {
                                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                                "configuration": {
                                  "activeRevisionsMode": "[parameters('revisionMode')]",
                                  "ingress": "[if(parameters('ingressEnabled'), createObject('external', parameters('external'), 'targetPort', parameters('targetPort'), 'transport', 'auto', 'corsPolicy', createObject('allowedOrigins', union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins')))), null())]",
                                  "dapr": "[if(parameters('daprEnabled'), createObject('enabled', true(), 'appId', parameters('daprAppId'), 'appProtocol', parameters('daprAppProtocol'), 'appPort', if(parameters('ingressEnabled'), parameters('targetPort'), 0)), createObject('enabled', false()))]",
                                  "secrets": "[parameters('secrets')]",
                                  "service": "[if(not(empty(parameters('serviceType'))), createObject('type', parameters('serviceType')), null())]",
                                  "registries": "[if(variables('usePrivateRegistry'), createArray(createObject('server', format('{0}.azurecr.io', parameters('containerRegistryName')), 'identity', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')))), createArray())]"
                                },
                                "template": {
                                  "serviceBinds": "[if(not(empty(parameters('serviceBinds'))), parameters('serviceBinds'), null())]",
                                  "containers": [
                                    {
                                      "image": "[if(not(empty(parameters('imageName'))), parameters('imageName'), 'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest')]",
                                      "name": "[parameters('containerName')]",
                                      "env": "[parameters('env')]",
                                      "resources": {
                                        "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                        "memory": "[parameters('containerMemory')]"
                                      }
                                    }
                                  ],
                                  "scale": {
                                    "minReplicas": "[parameters('containerMinReplicas')]",
                                    "maxReplicas": "[parameters('containerMaxReplicas')]"
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', format('{0}-registry-access', deployment().name))]"
                              ]
                            },
                            {
                              "condition": "[variables('usePrivateRegistry')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-registry-access', deployment().name)]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "containerRegistryName": {
                                    "value": "[parameters('containerRegistryName')]"
                                  },
                                  "principalId": "[if(variables('usePrivateRegistry'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', ''))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.21.1.54444",
                                      "templateHash": "3823587007918481878"
                                    },
                                    "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                                  },
                                  "parameters": {
                                    "containerRegistryName": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2022-04-01",
                                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                                      "properties": {
                                        "roleDefinitionId": "[variables('acrPullRole')]",
                                        "principalType": "ServicePrincipal",
                                        "principalId": "[parameters('principalId')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "defaultDomain": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName')), '2023-04-01-preview').defaultDomain]"
                            },
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(equals(variables('normalizedIdentityType'), 'None'), '', if(empty(parameters('identityName')), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-04-01-preview', 'full').identity.principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId))]"
                            },
                            "imageName": {
                              "type": "string",
                              "value": "[parameters('imageName')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "serviceBind": {
                              "type": "object",
                              "value": "[if(not(empty(parameters('serviceType'))), createObject('serviceId', resourceId('Microsoft.App/containerApps', parameters('name')), 'name', parameters('name')), createObject())]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[if(parameters('ingressEnabled'), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2023-04-01-preview').configuration.ingress.fqdn), '')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "defaultDomain": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.defaultDomain.value]"
                    },
                    "imageName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.imageName.value]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-update', deployment().name)), '2022-09-01').outputs.uri.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'api-keyvault-access')]"
              ]
            }
          ],
          "outputs": {
            "SERVICE_API_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId]"
            },
            "SERVICE_API_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app', parameters('serviceName'))), '2022-09-01').outputs.name.value]"
            },
            "SERVICE_API_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app', parameters('serviceName'))), '2022-09-01').outputs.uri.value]"
            },
            "SERVICE_API_IMAGE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app', parameters('serviceName'))), '2022-09-01').outputs.imageName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'container-apps')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyvault')]",
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": "[if(not(empty(parameters('cosmosAccountName'))), createObject('value', parameters('cosmosAccountName')), createObject('value', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))))]",
          "databaseName": {
            "value": "[parameters('cosmosDatabaseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "16631937903417936258"
            }
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "collections": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "TodoList",
                  "id": "TodoList",
                  "shardKey": "Hash",
                  "indexKey": "_id"
                },
                {
                  "name": "TodoItem",
                  "id": "TodoItem",
                  "shardKey": "Hash",
                  "indexKey": "_id"
                }
              ]
            },
            "databaseName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "variables": {
            "defaultDatabaseName": "Todo",
            "actualDatabaseName": "[if(not(empty(parameters('databaseName'))), parameters('databaseName'), variables('defaultDatabaseName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cosmos-mongo",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "accountName": {
                    "value": "[parameters('accountName')]"
                  },
                  "databaseName": {
                    "value": "[variables('actualDatabaseName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "collections": {
                    "value": "[parameters('collections')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "17180378298689662014"
                    },
                    "description": "Creates an Azure Cosmos DB for MongoDB account with a database."
                  },
                  "parameters": {
                    "accountName": {
                      "type": "string"
                    },
                    "databaseName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "collections": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "connectionStringKey": {
                      "type": "string",
                      "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                    },
                    "keyVaultName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "list",
                        "count": "[length(parameters('collections'))]"
                      },
                      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
                      "apiVersion": "2022-08-15",
                      "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1], parameters('collections')[copyIndex()].name)]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('collections')[copyIndex()].id]",
                          "shardKey": {
                            "_id": "[parameters('collections')[copyIndex()].shardKey]"
                          },
                          "indexes": [
                            {
                              "key": {
                                "keys": [
                                  "[parameters('collections')[copyIndex()].indexKey]"
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1])]"
                      ]
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
                      "apiVersion": "2022-08-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('databaseName')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'cosmos-mongo-account')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "cosmos-mongo-account",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('accountName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "connectionStringKey": {
                            "value": "[parameters('connectionStringKey')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.21.1.54444",
                              "templateHash": "11031894815865564141"
                            },
                            "description": "Creates an Azure Cosmos DB for MongoDB account."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "keyVaultName": {
                              "type": "string"
                            },
                            "connectionStringKey": {
                              "type": "string",
                              "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "cosmos-account",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "name": {
                                    "value": "[parameters('name')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "connectionStringKey": {
                                    "value": "[parameters('connectionStringKey')]"
                                  },
                                  "keyVaultName": {
                                    "value": "[parameters('keyVaultName')]"
                                  },
                                  "kind": {
                                    "value": "MongoDB"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.21.1.54444",
                                      "templateHash": "5954645402846745545"
                                    },
                                    "description": "Creates an Azure Cosmos DB account."
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {}
                                    },
                                    "connectionStringKey": {
                                      "type": "string",
                                      "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                                    },
                                    "keyVaultName": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "allowedValues": [
                                        "GlobalDocumentDB",
                                        "MongoDB",
                                        "Parse"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.DocumentDB/databaseAccounts",
                                      "apiVersion": "2022-08-15",
                                      "name": "[parameters('name')]",
                                      "kind": "[parameters('kind')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "consistencyPolicy": {
                                          "defaultConsistencyLevel": "Session"
                                        },
                                        "locations": [
                                          {
                                            "locationName": "[parameters('location')]",
                                            "failoverPriority": 0,
                                            "isZoneRedundant": false
                                          }
                                        ],
                                        "databaseAccountOfferType": "Standard",
                                        "enableAutomaticFailover": false,
                                        "enableMultipleWriteLocations": false,
                                        "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.0'), createObject())]",
                                        "capabilities": [
                                          {
                                            "name": "EnableServerless"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "Microsoft.KeyVault/vaults/secrets",
                                      "apiVersion": "2022-07-01",
                                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('connectionStringKey'))]",
                                      "properties": {
                                        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2022-08-15').connectionStrings[0].connectionString]"
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "connectionStringKey": {
                                      "type": "string",
                                      "value": "[parameters('connectionStringKey')]"
                                    },
                                    "endpoint": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2022-08-15').documentEndpoint]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
                                    },
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "connectionStringKey": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2022-09-01').outputs.connectionStringKey.value]"
                            },
                            "endpoint": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2022-09-01').outputs.endpoint.value]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2022-09-01').outputs.id.value]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "connectionStringKey": {
                      "type": "string",
                      "value": "[parameters('connectionStringKey')]"
                    },
                    "databaseName": {
                      "type": "string",
                      "value": "[parameters('databaseName')]"
                    },
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo-account'), '2022-09-01').outputs.endpoint.value]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "connectionStringKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo'), '2022-09-01').outputs.connectionStringKey.value]"
            },
            "databaseName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo'), '2022-09-01').outputs.databaseName.value]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo'), '2022-09-01').outputs.endpoint.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('keyVaultName'))), createObject('value', parameters('keyVaultName')), createObject('value', format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "2400067255859456248"
            },
            "description": "Creates an Azure Key Vault."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
              }
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "logAnalyticsName": "[if(not(empty(parameters('logAnalyticsName'))), createObject('value', parameters('logAnalyticsName')), createObject('value', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))))]",
          "applicationInsightsName": "[if(not(empty(parameters('applicationInsightsName'))), createObject('value', parameters('applicationInsightsName')), createObject('value', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))))]",
          "applicationInsightsDashboardName": "[if(not(empty(parameters('applicationInsightsDashboardName'))), createObject('value', parameters('applicationInsightsDashboardName')), createObject('value', format('{0}{1}', variables('abbrs').portalDashboards, variables('resourceToken'))))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "2414076572823487558"
            },
            "description": "Creates an Application Insights instance and a Log Analytics workspace."
          },
          "parameters": {
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "applicationInsightsDashboardName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "includeDashboard": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "loganalytics",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('logAnalyticsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "10193120495091804809"
                    },
                    "description": "Creates a Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-12-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "applicationinsights",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "dashboardName": {
                    "value": "[parameters('applicationInsightsDashboardName')]"
                  },
                  "includeDashboard": {
                    "value": "[parameters('includeDashboard')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "2044604789989991581"
                    },
                    "description": "Creates an Application Insights instance based on an existing Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "dashboardName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "includeDashboard": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                      }
                    },
                    {
                      "condition": "[parameters('includeDashboard')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "application-insights-dashboard",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('dashboardName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.21.1.54444",
                              "templateHash": "13286902661935936101"
                            },
                            "description": "Creates a dashboard for an Application Insights instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "applicationInsightsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Portal/dashboards",
                              "apiVersion": "2020-09-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "lenses": [
                                  {
                                    "order": 0,
                                    "parts": [
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 0,
                                          "colSpan": 2,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "id",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart",
                                          "asset": {
                                            "idInputName": "id",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "overview"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 2,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "ProactiveDetection"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:20:33.345Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 5,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-08T18:47:35.237Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Usage",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:22:35.782Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Reliability",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 7,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:42:40.072Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "failures"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Responsiveness\r\n",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 11,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:43:37.804Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "performance"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Browser",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 15,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "MetricsExplorerJsonDefinitionId",
                                              "value": "BrowserPerformanceTimelineMetrics"
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "createdTime": "2018-05-08T12:16:27.534Z",
                                                "isInitialTime": false,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "CurrentFilter",
                                              "value": {
                                                "eventTypes": [
                                                  4,
                                                  1,
                                                  3,
                                                  5,
                                                  2,
                                                  6,
                                                  13
                                                ],
                                                "typeFacets": {},
                                                "isPermissive": false
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "browser"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "sessions/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Sessions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "users/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Users",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Unique sessions and users",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "segmentationUsers"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Failed requests",
                                                        "color": "#EC008C"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Failed requests",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "failures"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/duration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server response time",
                                                        "color": "#00BCF2"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server response time",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "performance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/networkDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Page load network connect time",
                                                        "color": "#7E58FF"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/processingDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Client processing time",
                                                        "color": "#44F1C8"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/sendDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Send request time",
                                                        "color": "#EB9371"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/receiveDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Receiving response time",
                                                        "color": "#0672F1"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average page load time breakdown",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/availabilityPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average availability",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "availability"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/server",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "dependencies/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Dependency failures",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server exceptions and Dependency failures",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processorCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Processor time",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process CPU",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average processor and process CPU utilization",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/browser",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Browser exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Browser exceptions",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/count",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability test results count",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Availability test results count",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processIOBytesPerSecond",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process IO rate",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average process I/O rate",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/memoryAvailableBytes",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Available memory",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average available memory",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "connectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'loganalytics')]"
              ]
            }
          ],
          "outputs": {
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.connectionString.value]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.instrumentationKey.value]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.name.value]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.name.value]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('useAPIM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apim-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('apimServiceName'))), createObject('value', parameters('apimServiceName')), createObject('value', format('{0}{1}', variables('abbrs').apiManagementService, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "applicationInsightsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "8375777218735620263"
            },
            "description": "Creates an Azure API Management instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "publisherEmail": {
              "type": "string",
              "defaultValue": "noreply@microsoft.com",
              "minLength": 1,
              "metadata": {
                "description": "The email address of the owner of the service"
              }
            },
            "publisherName": {
              "type": "string",
              "defaultValue": "n/a",
              "minLength": 1,
              "metadata": {
                "description": "The name of the owner of the service"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Consumption",
              "allowedValues": [
                "Consumption",
                "Developer",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "The pricing tier of this API Management service"
              }
            },
            "skuCount": {
              "type": "int",
              "defaultValue": 0,
              "allowedValues": [
                0,
                1,
                2
              ],
              "metadata": {
                "description": "The instance size of this API Management service."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Azure Application Insights Name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2021-08-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('azd-service-name', parameters('name')))]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[if(equals(parameters('sku'), 'Consumption'), 0, if(equals(parameters('sku'), 'Developer'), 1, parameters('skuCount')))]"
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]",
                "customProperties": "[if(equals(parameters('sku'), 'Consumption'), createObject(), createObject('Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30', 'false'))]"
              }
            },
            {
              "condition": "[not(empty(parameters('applicationInsightsName')))]",
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), 'app-insights-logger')]",
              "properties": {
                "credentials": {
                  "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
                },
                "description": "Logger to Azure Application Insights",
                "isBuffered": false,
                "loggerType": "applicationInsights",
                "resourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "apimServiceName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]"
      ]
    },
    {
      "condition": "[parameters('useAPIM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apim-api-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(parameters('useAPIM'), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'apim-deployment'), '2022-09-01').outputs.apimServiceName.value), createObject('value', ''))]",
          "apiName": {
            "value": "todo-api"
          },
          "apiDisplayName": {
            "value": "Simple Todo API"
          },
          "apiDescription": {
            "value": "This is a simple Todo API"
          },
          "apiPath": {
            "value": "todo"
          },
          "webFrontendUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.SERVICE_WEB_URI.value]"
          },
          "apiBackendUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "11715358379047803118"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "apiName": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Resource name to uniquely identify this API within the API Management service instance"
              }
            },
            "apiDisplayName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 300,
              "metadata": {
                "description": "The Display Name of the API"
              }
            },
            "apiDescription": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Description of the API. May include HTML formatting tags."
              }
            },
            "apiPath": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
              }
            },
            "webFrontendUrl": {
              "type": "string",
              "metadata": {
                "description": "Absolute URL of the web frontend"
              }
            },
            "apiBackendUrl": {
              "type": "string",
              "metadata": {
                "description": "Absolute URL of the backend service implementing this API."
              }
            },
            "apiAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Resource name for backend Web App or Function App"
              }
            }
          },
          "variables": {
            "$fxv#0": "<!-- Policy configuration for the API. Explore other sample policies at https://learn.microsoft.com/en-us/azure/api-management/policies/ -->\n<policies>\n    <inbound>\n        <base />\n        <!-- This policy is needed to handle preflight requests using the OPTIONS method. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-cross-domain-policies  -->\n        <cors allow-credentials=\"false\">\n            <allowed-origins>\n                <origin>{origin}</origin>\n            </allowed-origins>\n            <allowed-methods>\n                <method>PUT</method>\n                <method>GET</method>\n                <method>POST</method>\n                <method>DELETE</method>\n                <method>PATCH</method>\n            </allowed-methods>\n            <allowed-headers>\n                <header>*</header>\n            </allowed-headers>\n            <expose-headers>\n                <header>*</header>\n            </expose-headers>\n        </cors>\n        <!-- Optional policy to validate the request content. Learn more at https://learn.microsoft.com/en-us/azure/api-management/validation-policies#validate-content -->\n        <validate-content unspecified-content-type-action=\"ignore\" max-size=\"1024\" size-exceeded-action=\"detect\" errors-variable-name=\"requestBodyValidation\">\n            <content type=\"application/json\" validate-as=\"json\" action=\"detect\" />\n        </validate-content>\n        <!-- Optional policy to send custom trace telemetry to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#Trace -->\n        <trace source=\"@(context.Api.Name)\" severity=\"verbose\">\n            <message>Call to the @(context.Api.Name)</message>\n            <metadata name=\"User-Agent\" value=\"@(context.Request.Headers.GetValueOrDefault(\"User-Agent\",\"\"))\" />\n            <metadata name=\"Operation Method\" value=\"@(context.Request.Method)\" />\n            <metadata name=\"Host\" value=\"@(context.Request.Url.Host)\" />\n            <metadata name=\"Path\" value=\"@(context.Request.Url.Path)\" />\n        </trace>\n    </inbound>\n    <backend>\n        <limit-concurrency key=\"@(context.Request.IpAddress)\" max-count=\"3\">\n            <forward-request timeout=\"120\" />\n        </limit-concurrency>\n    </backend>\n    <outbound>\n        <base />\n        <!-- Optional policy to validate the response headers. Learn more at https://learn.microsoft.com/en-us/azure/api-management/validation-policies#validate-headers -->\n        <validate-headers specified-header-action=\"ignore\" unspecified-header-action=\"ignore\" errors-variable-name=\"responseHeadersValidation\" />\n        <!-- Optional policy to to send custom metrics to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#emit-metrics -->\n        <choose>\n            <when condition=\"@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 300)\">\n                <emit-metric name=\"Successful requests\" value=\"1\" namespace=\"apim-metrics\">\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n                    <dimension name=\"Status Code\" value=\"@((String)context.Response.StatusCode.ToString())\" />\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\n                </emit-metric>\n            </when>\n            <when condition=\"@(context.Response.StatusCode >= 400 && context.Response.StatusCode < 600)\">\n                <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n                    <dimension name=\"Status Code\" value=\"@(context.Response.StatusCode.ToString())\" />\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\n                    <dimension name=\"Error Source\" value=\"backend\" />\n                </emit-metric>\n            </when>\n        </choose>\n    </outbound>\n    <on-error>\n        <base />\n        <!-- Optional policy to handle errors. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-error-handling-policies -->\n        <trace source=\"@(context.Api.Name)\" severity=\"error\">\n            <message>Failed to process the @(context.Api.Name)</message>\n            <metadata name=\"User-Agent\" value=\"@(context.Request.Headers.GetValueOrDefault(\"User-Agent\",\"\"))\" />\n            <metadata name=\"Operation Method\" value=\"@(context.Request.Method)\" />\n            <metadata name=\"Host\" value=\"@(context.Request.Url.Host)\" />\n            <metadata name=\"Path\" value=\"@(context.Request.Url.Path)\" />\n            <metadata name=\"Error Reason\" value=\"@(context.LastError.Reason)\" />\n            <metadata name=\"Error Message\" value=\"@(context.LastError.Message)\" />\n        </trace>\n        <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\n            <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n            <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n            <dimension name=\"Status Code\" value=\"500\" />\n            <dimension name=\"Status Reason\" value=\"@(context.LastError.Reason)\" />\n            <dimension name=\"Error Source\" value=\"gateway\" />\n        </emit-metric>\n        <!-- Optional policy to hide error details and provide a custom generic message. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#ReturnResponse -->\n        <return-response>\n            <set-status code=\"500\" reason=\"Internal Server Error\" />\n            <set-body>An unexpected error has occurred.</set-body>\n        </return-response>\n    </on-error>\n</policies>\n",
            "$fxv#1": "openapi: 3.0.0\ninfo:\n  description: Simple Todo API\n  version: 3.0.0\n  title: Simple Todo API\n  contact:\n    email: azdevteam@microsoft.com\n\ncomponents:\n  schemas:\n    TodoItem:\n      type: object\n      required:\n        - listId\n        - name\n        - description\n      description: A task that needs to be completed\n      properties:\n        id:\n          type: string\n        listId:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        state:\n          $ref: \"#/components/schemas/TodoState\"\n        dueDate:\n          type: string\n          format: date-time\n        completedDate:\n          type: string\n          format: date-time\n    TodoList:\n      type: object\n      required:\n        - name\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n      description: \" A list of related Todo items\"\n    TodoState:\n      type: string\n      enum:\n        - todo\n        - inprogress\n        - done\n  parameters:\n    listId:\n      in: path\n      required: true\n      name: listId\n      description: The Todo list unique identifier\n      schema:\n        type: string\n    itemId:\n      in: path\n      required: true\n      name: itemId\n      description: The Todo item unique identifier\n      schema:\n        type: string\n    state:\n      in: path\n      required: true\n      name: state\n      description: The Todo item state\n      schema:\n        $ref: \"#/components/schemas/TodoState\"\n    top:\n      in: query\n      required: false\n      name: top\n      description: The max number of items to returns in a result\n      schema:\n        type: number\n        default: 20\n    skip:\n      in: query\n      required: false\n      name: skip\n      description: The number of items to skip within the results\n      schema:\n        type: number\n        default: 0\n\n  requestBodies:\n    TodoList:\n      description: The Todo List\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TodoList\"\n    TodoItem:\n      description: The Todo Item\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TodoItem\"\n\n  responses:\n    TodoList:\n      description: A Todo list result\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TodoList\"\n    TodoListArray:\n      description: An array of Todo lists\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/TodoList\"\n    TodoItem:\n      description: A Todo item result\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TodoItem\"\n    TodoItemArray:\n      description: An array of Todo items\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/TodoItem\"\n\npaths:\n  /lists:\n    get:\n      operationId: GetLists\n      summary: Gets an array of Todo lists\n      tags:\n        - Lists\n      parameters:\n        - $ref: \"#/components/parameters/top\"\n        - $ref: \"#/components/parameters/skip\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoListArray\"\n    post:\n      operationId: CreateList\n      summary: Creates a new Todo list\n      tags:\n        - Lists\n      requestBody:\n        $ref: \"#/components/requestBodies/TodoList\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TodoList\"\n        400:\n          description: Invalid request schema\n  /lists/{listId}:\n    get:\n      operationId: GetListById\n      summary: Gets a Todo list by unique identifier\n      tags:\n        - Lists\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoList\"\n        404:\n          description: Todo list not found\n    put:\n      operationId: UpdateListById\n      summary: Updates a Todo list by unique identifier\n      tags:\n        - Lists\n      requestBody:\n        $ref: \"#/components/requestBodies/TodoList\"\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoList\"\n        404:\n          description: Todo list not found\n        400:\n          description: Todo list is invalid\n    delete:\n      operationId: DeleteListById\n      summary: Deletes a Todo list by unique identifier\n      tags:\n        - Lists\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        204:\n          description: Todo list deleted successfully\n        404:\n          description: Todo list not found\n  /lists/{listId}/items:\n    post:\n      operationId: CreateItem\n      summary: Creates a new Todo item within a list\n      tags:\n        - Items\n      requestBody:\n        $ref: \"#/components/requestBodies/TodoItem\"\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TodoItem\"\n        404:\n          description: Todo list not found\n    get:\n      operationId: GetItemsByListId\n      summary: Gets Todo items within the specified list\n      tags:\n        - Items\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/top\"\n        - $ref: \"#/components/parameters/skip\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoItemArray\"\n        404:\n          description: Todo list not found\n  /lists/{listId}/items/{itemId}:\n    get:\n      operationId: GetItemById\n      summary: Gets a Todo item by unique identifier\n      tags:\n        - Items\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/itemId\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoItem\"\n        404:\n          description: Todo list or item not found\n    put:\n      operationId: UpdateItemById\n      summary: Updates a Todo item by unique identifier\n      tags:\n        - Items\n      requestBody:\n        $ref: \"#/components/requestBodies/TodoItem\"\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/itemId\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoItem\"\n        400:\n          description: Todo item is invalid\n        404:\n          description: Todo list or item not found\n    delete:\n      operationId: DeleteItemById\n      summary: Deletes a Todo item by unique identifier\n      tags:\n        - Items\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/itemId\"\n      responses:\n        204:\n          description: Todo item deleted successfully\n        404:\n          description: Todo list or item not found\n  /lists/{listId}/items/state/{state}:\n    get:\n      operationId: GetItemsByListIdAndState\n      summary: Gets a list of Todo items of a specific state\n      tags:\n        - Items\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/top\"\n        - $ref: \"#/components/parameters/skip\"\n      responses:\n        200:\n          $ref: \"#/components/responses/TodoItemArray\"\n        404:\n          description: Todo list or item not found\n    put:\n      operationId: UpdateItemsStateByListId\n      summary: Changes the state of the specified list items\n      tags:\n        - Items\n      requestBody:\n        description: unique identifiers of the Todo items to update\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                description: The Todo item unique identifier\n                type: string\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/state\"\n      responses:\n        204:\n          description: Todo items updated\n        400:\n          description: Update request is invalid\n",
            "apiPolicyContent": "[replace(variables('$fxv#0'), '{origin}', parameters('webFrontendUrl'))]",
            "appNameForBicep": "[if(not(empty(parameters('apiAppName'))), parameters('apiAppName'), 'placeholderName')]"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('apiName'))]",
              "properties": {
                "description": "[parameters('apiDescription')]",
                "displayName": "[parameters('apiDisplayName')]",
                "path": "[parameters('apiPath')]",
                "protocols": [
                  "https"
                ],
                "subscriptionRequired": false,
                "type": "http",
                "format": "openapi",
                "serviceUrl": "[parameters('apiBackendUrl')]",
                "value": "[variables('$fxv#1')]"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('apiName'), 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('apiPolicyContent')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), parameters('apiName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/diagnostics",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('apiName'), 'applicationinsights')]",
              "properties": {
                "alwaysLog": "allErrors",
                "backend": {
                  "request": {
                    "body": {
                      "bytes": 1024
                    }
                  },
                  "response": {
                    "body": {
                      "bytes": 1024
                    }
                  }
                },
                "frontend": {
                  "request": {
                    "body": {
                      "bytes": 1024
                    }
                  },
                  "response": {
                    "body": {
                      "bytes": 1024
                    }
                  }
                },
                "httpCorrelationProtocol": "W3C",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('name'), 'app-insights-logger')]",
                "metrics": true,
                "sampling": {
                  "percentage": 100,
                  "samplingType": "fixed"
                },
                "verbosity": "verbose"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), parameters('apiName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('apiAppName')))]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/web', variables('appNameForBicep'))]",
              "kind": "string",
              "properties": {
                "apiManagementConfig": {
                  "id": "[format('{0}/apis/{1}', resourceId('Microsoft.ApiManagement/service', parameters('name')), parameters('apiName'))]"
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_API_URI": {
              "type": "string",
              "value": "[format('{0}/{1}', reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2021-08-01').gatewayUrl, parameters('apiPath'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api')]",
        "[resourceId('Microsoft.Resources/deployments', 'apim-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'web')]"
      ]
    }
  ],
  "outputs": {
    "AZURE_COSMOS_CONNECTION_STRING_KEY": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.connectionStringKey.value]"
    },
    "AZURE_COSMOS_DATABASE_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.databaseName.value]"
    },
    "API_CORS_ACA_URL": {
      "type": "string",
      "value": "[format('https://{0}.{1}', variables('apiContainerAppNameOrDefault'), reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.defaultDomain.value)]"
    },
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
    },
    "APPLICATIONINSIGHTS_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
    },
    "AZURE_CONTAINER_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.environmentName.value]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryLoginServer.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'container-apps'), '2022-09-01').outputs.registryName.value]"
    },
    "AZURE_KEY_VAULT_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_KEY_VAULT_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value]"
    },
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "REACT_APP_API_BASE_URL": {
      "type": "string",
      "value": "[if(parameters('useAPIM'), reference(resourceId('Microsoft.Resources/deployments', 'apim-api-deployment'), '2022-09-01').outputs.SERVICE_API_URI.value, reference(resourceId('Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value)]"
    },
    "REACT_APP_APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
    },
    "REACT_APP_WEB_BASE_URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.SERVICE_WEB_URI.value]"
    },
    "SERVICE_API_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_NAME.value]"
    },
    "SERVICE_WEB_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.SERVICE_WEB_NAME.value]"
    },
    "USE_APIM": {
      "type": "bool",
      "value": "[parameters('useAPIM')]"
    },
    "SERVICE_API_ENDPOINTS": {
      "type": "array",
      "value": "[if(parameters('useAPIM'), createArray(reference(resourceId('Microsoft.Resources/deployments', 'apim-api-deployment'), '2022-09-01').outputs.SERVICE_API_URI.value, reference(resourceId('Microsoft.Resources/deployments', 'api'), '2022-09-01').outputs.SERVICE_API_URI.value), createArray())]"
    }
  }
}